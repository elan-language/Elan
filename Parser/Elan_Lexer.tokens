NL=1
SINGLE_LINE_COMMENT=2
COMMENT_MARKER=3
ABSTRACT=4
AND=5
AS=6
ASSERT=7
CALL=8
CASE=9
CATCH=10
CLASS=11
CONSTANT=12
CONSTRUCTOR=13
CURRY=14
DEFAULT=15
DIV=16
ELSE=17
END=18
ENUM=19
FOR=20
FOREACH=21
FROM=22
FUNCTION=23
GLOBAL=24
IF=25
IMMUTABLE=26
IMPORT=27
IN=28
INHERITS=29
INPUT=30
LAMBDA=31
LET=32
LIBRARY=33
MAIN=34
MOD=35
NEW=36
NOT=37
OF=38
IS=39
OR=40
OUT=41
PARTIAL=42
PRINT=43
PRIVATE=44
PROCEDURE=45
PROPERTY=46
REPEAT=47
RETURN=48
SELF=49
SET=50
STEP=51
SWITCH=52
SYSTEM=53
TEST=54
THEN=55
THROW=56
TO=57
TRY=58
UNTIL=59
VAR=60
WHILE=61
WITH=62
XOR=63
BOOL_VALUE=64
VALUE_TYPE=65
ARRAY=66
LIST=67
DICTIONARY=68
ITERABLE=69
EQUALS=70
ARROW=71
OPEN_BRACE=72
CLOSE_BRACE=73
OPEN_SQ_BRACKET=74
CLOSE_SQ_BRACKET=75
OPEN_BRACKET=76
CLOSE_BRACKET=77
DOUBLE_DOT=78
DOT=79
COMMA=80
COLON=81
PLUS=82
MINUS=83
MULT=84
DIVIDE=85
POWER=86
LT=87
GT=88
LE=89
GE=90
IS_NOT=91
TYPENAME=92
IDENTIFIER=93
LITERAL_INTEGER=94
LITERAL_FLOAT=95
LITERAL_CHAR=96
LITERAL_STRING=97
WHITESPACES=98
NEWLINE=99
WS=100
'#'=3
'abstract'=4
'and'=5
'as'=6
'assert'=7
'call'=8
'case'=9
'catch'=10
'class'=11
'constant'=12
'constructor'=13
'curry'=14
'default'=15
'div'=16
'else'=17
'end'=18
'enum'=19
'for'=20
'foreach'=21
'from'=22
'function'=23
'global'=24
'if'=25
'immutable'=26
'import'=27
'in'=28
'inherits'=29
'input'=30
'lambda'=31
'let'=32
'library'=33
'main'=34
'mod'=35
'new'=36
'not'=37
'of'=38
'is'=39
'or'=40
'out'=41
'partial'=42
'print'=43
'private'=44
'procedure'=45
'property'=46
'repeat'=47
'return'=48
'self'=49
'set'=50
'step'=51
'switch'=52
'system'=53
'test'=54
'then'=55
'throw'=56
'to'=57
'try'=58
'until'=59
'var'=60
'while'=61
'with'=62
'xor'=63
'Array'=66
'List'=67
'Dictionary'=68
'Iter'=69
'='=70
'->'=71
'{'=72
'}'=73
'['=74
']'=75
'('=76
')'=77
'..'=78
'.'=79
','=80
':'=81
'+'=82
'-'=83
'*'=84
'/'=85
'^'=86
'<'=87
'>'=88
'<='=89
'>='=90
