//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c://Elan//Repository//Parser//Elan.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class ElanLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		NL=1, SINGLE_LINE_COMMENT=2, COMMENT_MARKER=3, ABSTRACT=4, CASE=5, CATCH=6, 
		CLASS=7, CONSTANT=8, CONSTRUCTOR=9, CURRY=10, DEFAULT=11, ELSE=12, END=13, 
		ENUM=14, FOR=15, FOREACH=16, FUNCTION=17, GLOBAL=18, IF=19, IMMUTABLE=20, 
		IN=21, INHERITS=22, LAMBDA=23, LET=24, MAIN=25, PARTIAL=26, PRIVATE=27, 
		PROCEDURE=28, PROPERTY=29, REPEAT=30, RETURN=31, SELF=32, SET=33, STEP=34, 
		SWITCH=35, TEST=36, THEN=37, TO=38, TRY=39, UNTIL=40, VAR=41, WHILE=42, 
		WITH=43, BOOL_VALUE=44, VALUE_TYPE=45, ARRAY=46, LIST=47, DICTIONARY=48, 
		ITERABLE=49, ASSIGN=50, ARROW=51, OPEN_BRACE=52, CLOSE_BRACE=53, OPEN_SQ_BRACKET=54, 
		CLOSE_SQ_BRACKET=55, OPEN_BRACKET=56, CLOSE_BRACKET=57, DOUBLE_DOT=58, 
		DOT=59, COMMA=60, COLON=61, PLUS=62, MINUS=63, MULT=64, DIVIDE=65, POWER=66, 
		MOD=67, INT_DIV=68, LT=69, GT=70, OP_AND=71, OP_NOT=72, OP_OR=73, OP_XOR=74, 
		OP_EQ=75, OP_NE=76, OP_LE=77, OP_GE=78, TYPENAME=79, IDENTIFIER=80, LITERAL_INTEGER=81, 
		LITERAL_FLOAT=82, LITERAL_CHAR=83, LITERAL_STRING=84, WHITESPACES=85, 
		NEWLINE=86, WS=87;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"NL", "SINGLE_LINE_COMMENT", "COMMENT_MARKER", "ABSTRACT", "CASE", "CATCH", 
		"CLASS", "CONSTANT", "CONSTRUCTOR", "CURRY", "DEFAULT", "ELSE", "END", 
		"ENUM", "FOR", "FOREACH", "FUNCTION", "GLOBAL", "IF", "IMMUTABLE", "IN", 
		"INHERITS", "LAMBDA", "LET", "MAIN", "PARTIAL", "PRIVATE", "PROCEDURE", 
		"PROPERTY", "REPEAT", "RETURN", "SELF", "SET", "STEP", "SWITCH", "TEST", 
		"THEN", "TO", "TRY", "UNTIL", "VAR", "WHILE", "WITH", "BOOL_VALUE", "VALUE_TYPE", 
		"ARRAY", "LIST", "DICTIONARY", "ITERABLE", "ASSIGN", "ARROW", "OPEN_BRACE", 
		"CLOSE_BRACE", "OPEN_SQ_BRACKET", "CLOSE_SQ_BRACKET", "OPEN_BRACKET", 
		"CLOSE_BRACKET", "DOUBLE_DOT", "DOT", "COMMA", "COLON", "PLUS", "MINUS", 
		"MULT", "DIVIDE", "POWER", "MOD", "INT_DIV", "LT", "GT", "OP_AND", "OP_NOT", 
		"OP_OR", "OP_XOR", "OP_EQ", "OP_NE", "OP_LE", "OP_GE", "TYPENAME", "IDENTIFIER", 
		"LITERAL_INTEGER", "LITERAL_FLOAT", "LITERAL_CHAR", "LITERAL_STRING", 
		"WHITESPACES", "InputCharacter", "NewLineCharacter", "ExponentPart", "CommonCharacter", 
		"SimpleEscapeSequence", "HexEscapeSequence", "NewLine", "Whitespace", 
		"UnicodeClassZS", "IdentifierStartingUCorLC", "IdentifierStartingLC", 
		"IdentifierStartingUC", "IdentifierPartCharacter", "LetterCharacter", 
		"DecimalDigitCharacter", "ConnectingCharacter", "FormattingCharacter", 
		"UnicodeEscapeSequence", "HexDigit", "UnicodeClassLU", "UnicodeClassLL", 
		"UnicodeClassND", "NEWLINE", "WS"
	};


	public ElanLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ElanLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, "'#'", "'abstract'", "'case'", "'catch'", "'class'", 
		"'constant'", "'constructor'", "'curry'", "'default'", "'else'", "'end'", 
		"'enum'", "'for'", "'foreach'", "'function'", "'global'", "'if'", "'immutable'", 
		"'in'", "'inherits'", "'lambda'", "'let'", "'main'", "'partial'", "'private'", 
		"'procedure'", "'property'", "'repeat'", "'return'", "'self'", "'set'", 
		"'step'", "'switch'", "'test'", "'then'", "'to'", "'try'", "'until'", 
		"'var'", "'while'", "'with'", null, null, "'Array'", "'List'", "'Dictionary'", 
		"'Iter'", "'='", "'->'", "'{'", "'}'", "'['", "']'", "'('", "')'", "'..'", 
		"'.'", "','", "':'", "'+'", "'-'", "'*'", "'/'", "'^'", "'mod'", "'div'", 
		"'<'", "'>'", "'and'", "'not'", "'or'", "'xor'", "'is'", null, "'<='", 
		"'>='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "NL", "SINGLE_LINE_COMMENT", "COMMENT_MARKER", "ABSTRACT", "CASE", 
		"CATCH", "CLASS", "CONSTANT", "CONSTRUCTOR", "CURRY", "DEFAULT", "ELSE", 
		"END", "ENUM", "FOR", "FOREACH", "FUNCTION", "GLOBAL", "IF", "IMMUTABLE", 
		"IN", "INHERITS", "LAMBDA", "LET", "MAIN", "PARTIAL", "PRIVATE", "PROCEDURE", 
		"PROPERTY", "REPEAT", "RETURN", "SELF", "SET", "STEP", "SWITCH", "TEST", 
		"THEN", "TO", "TRY", "UNTIL", "VAR", "WHILE", "WITH", "BOOL_VALUE", "VALUE_TYPE", 
		"ARRAY", "LIST", "DICTIONARY", "ITERABLE", "ASSIGN", "ARROW", "OPEN_BRACE", 
		"CLOSE_BRACE", "OPEN_SQ_BRACKET", "CLOSE_SQ_BRACKET", "OPEN_BRACKET", 
		"CLOSE_BRACKET", "DOUBLE_DOT", "DOT", "COMMA", "COLON", "PLUS", "MINUS", 
		"MULT", "DIVIDE", "POWER", "MOD", "INT_DIV", "LT", "GT", "OP_AND", "OP_NOT", 
		"OP_OR", "OP_XOR", "OP_EQ", "OP_NE", "OP_LE", "OP_GE", "TYPENAME", "IDENTIFIER", 
		"LITERAL_INTEGER", "LITERAL_FLOAT", "LITERAL_CHAR", "LITERAL_STRING", 
		"WHITESPACES", "NEWLINE", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Elan.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static ElanLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,87,847,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
		7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,
		7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,
		7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,
		104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,1,0,4,0,221,8,0,11,
		0,12,0,222,1,1,3,1,226,8,1,1,1,1,1,5,1,230,8,1,10,1,12,1,233,9,1,1,1,1,
		1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,
		1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,
		7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,
		1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,
		1,11,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,
		1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,
		1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,19,
		1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,21,1,21,
		1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
		1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,
		1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,
		1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,
		1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,
		1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,33,1,33,1,33,
		1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,
		1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,39,1,39,
		1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,
		1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,
		3,43,500,8,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,
		44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,3,44,524,8,44,1,45,
		1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,
		1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,49,1,49,
		1,50,1,50,1,50,1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,1,55,1,55,1,56,
		1,56,1,57,1,57,1,57,1,58,1,58,1,59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,
		1,63,1,63,1,64,1,64,1,65,1,65,1,66,1,66,1,66,1,66,1,67,1,67,1,67,1,67,
		1,68,1,68,1,69,1,69,1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,71,1,72,1,72,
		1,72,1,73,1,73,1,73,1,73,1,74,1,74,1,74,1,75,1,75,1,75,1,75,1,75,1,75,
		5,75,625,8,75,10,75,12,75,628,9,75,1,75,1,75,1,75,3,75,633,8,75,1,76,1,
		76,1,76,1,77,1,77,1,77,1,78,1,78,1,79,1,79,1,80,1,80,5,80,647,8,80,10,
		80,12,80,650,9,80,1,81,1,81,1,81,1,81,3,81,656,8,81,1,82,1,82,1,82,3,82,
		661,8,82,1,82,1,82,1,83,1,83,1,83,5,83,668,8,83,10,83,12,83,671,9,83,1,
		83,1,83,1,84,4,84,676,8,84,11,84,12,84,677,1,84,1,84,1,85,1,85,1,86,1,
		86,1,87,1,87,1,87,3,87,689,8,87,1,87,1,87,1,88,1,88,1,88,3,88,696,8,88,
		1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,
		1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,3,89,720,8,89,1,90,1,90,1,90,1,
		90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,
		90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,3,90,747,8,90,1,91,1,91,1,91,3,91,
		752,8,91,1,92,1,92,3,92,756,8,92,1,93,1,93,1,94,1,94,3,94,762,8,94,1,94,
		5,94,765,8,94,10,94,12,94,768,9,94,1,95,1,95,5,95,772,8,95,10,95,12,95,
		775,9,95,1,96,1,96,5,96,779,8,96,10,96,12,96,782,9,96,1,97,1,97,1,97,1,
		97,3,97,788,8,97,1,98,1,98,1,98,3,98,793,8,98,1,99,1,99,3,99,797,8,99,
		1,100,1,100,1,101,1,101,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,
		1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,
		3,102,823,8,102,1,103,3,103,826,8,103,1,104,1,104,1,105,1,105,1,106,1,
		106,1,107,3,107,835,8,107,1,107,1,107,3,107,839,8,107,1,108,4,108,842,
		8,108,11,108,12,108,843,1,108,1,108,0,0,109,1,1,3,2,5,3,7,4,9,5,11,6,13,
		7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,
		39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,
		63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,
		87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,
		109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,
		129,65,131,66,133,67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,
		149,75,151,76,153,77,155,78,157,79,159,80,161,81,163,82,165,83,167,84,
		169,85,171,0,173,0,175,0,177,0,179,0,181,0,183,0,185,0,187,0,189,0,191,
		0,193,0,195,0,197,0,199,0,201,0,203,0,205,0,207,0,209,0,211,0,213,0,215,
		86,217,87,1,0,10,2,0,10,10,12,13,1,0,48,57,5,0,10,10,13,13,39,39,92,92,
		133,133,2,0,34,34,133,133,3,0,10,10,13,13,133,133,2,0,69,69,101,101,2,
		0,9,9,11,12,2,0,32,32,160,160,3,0,48,57,65,70,97,102,2,0,9,9,32,32,873,
		0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,
		0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
		1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,
		0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,
		1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,
		0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,
		1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,
		0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,
		1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,
		0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,
		0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,
		0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,
		0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,
		0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,
		0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,
		0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,
		0,0,215,1,0,0,0,0,217,1,0,0,0,1,220,1,0,0,0,3,225,1,0,0,0,5,236,1,0,0,
		0,7,238,1,0,0,0,9,247,1,0,0,0,11,252,1,0,0,0,13,258,1,0,0,0,15,264,1,0,
		0,0,17,273,1,0,0,0,19,285,1,0,0,0,21,291,1,0,0,0,23,299,1,0,0,0,25,304,
		1,0,0,0,27,308,1,0,0,0,29,313,1,0,0,0,31,317,1,0,0,0,33,325,1,0,0,0,35,
		334,1,0,0,0,37,341,1,0,0,0,39,344,1,0,0,0,41,354,1,0,0,0,43,357,1,0,0,
		0,45,366,1,0,0,0,47,373,1,0,0,0,49,377,1,0,0,0,51,382,1,0,0,0,53,390,1,
		0,0,0,55,398,1,0,0,0,57,408,1,0,0,0,59,417,1,0,0,0,61,424,1,0,0,0,63,431,
		1,0,0,0,65,436,1,0,0,0,67,440,1,0,0,0,69,445,1,0,0,0,71,452,1,0,0,0,73,
		457,1,0,0,0,75,462,1,0,0,0,77,465,1,0,0,0,79,469,1,0,0,0,81,475,1,0,0,
		0,83,479,1,0,0,0,85,485,1,0,0,0,87,499,1,0,0,0,89,523,1,0,0,0,91,525,1,
		0,0,0,93,531,1,0,0,0,95,536,1,0,0,0,97,547,1,0,0,0,99,552,1,0,0,0,101,
		554,1,0,0,0,103,557,1,0,0,0,105,559,1,0,0,0,107,561,1,0,0,0,109,563,1,
		0,0,0,111,565,1,0,0,0,113,567,1,0,0,0,115,569,1,0,0,0,117,572,1,0,0,0,
		119,574,1,0,0,0,121,576,1,0,0,0,123,578,1,0,0,0,125,580,1,0,0,0,127,582,
		1,0,0,0,129,584,1,0,0,0,131,586,1,0,0,0,133,588,1,0,0,0,135,592,1,0,0,
		0,137,596,1,0,0,0,139,598,1,0,0,0,141,600,1,0,0,0,143,604,1,0,0,0,145,
		608,1,0,0,0,147,611,1,0,0,0,149,615,1,0,0,0,151,632,1,0,0,0,153,634,1,
		0,0,0,155,637,1,0,0,0,157,640,1,0,0,0,159,642,1,0,0,0,161,644,1,0,0,0,
		163,651,1,0,0,0,165,657,1,0,0,0,167,664,1,0,0,0,169,675,1,0,0,0,171,681,
		1,0,0,0,173,683,1,0,0,0,175,685,1,0,0,0,177,695,1,0,0,0,179,719,1,0,0,
		0,181,746,1,0,0,0,183,751,1,0,0,0,185,755,1,0,0,0,187,757,1,0,0,0,189,
		761,1,0,0,0,191,769,1,0,0,0,193,776,1,0,0,0,195,787,1,0,0,0,197,792,1,
		0,0,0,199,796,1,0,0,0,201,798,1,0,0,0,203,800,1,0,0,0,205,822,1,0,0,0,
		207,825,1,0,0,0,209,827,1,0,0,0,211,829,1,0,0,0,213,831,1,0,0,0,215,838,
		1,0,0,0,217,841,1,0,0,0,219,221,7,0,0,0,220,219,1,0,0,0,221,222,1,0,0,
		0,222,220,1,0,0,0,222,223,1,0,0,0,223,2,1,0,0,0,224,226,3,1,0,0,225,224,
		1,0,0,0,225,226,1,0,0,0,226,227,1,0,0,0,227,231,3,5,2,0,228,230,3,171,
		85,0,229,228,1,0,0,0,230,233,1,0,0,0,231,229,1,0,0,0,231,232,1,0,0,0,232,
		234,1,0,0,0,233,231,1,0,0,0,234,235,6,1,0,0,235,4,1,0,0,0,236,237,5,35,
		0,0,237,6,1,0,0,0,238,239,5,97,0,0,239,240,5,98,0,0,240,241,5,115,0,0,
		241,242,5,116,0,0,242,243,5,114,0,0,243,244,5,97,0,0,244,245,5,99,0,0,
		245,246,5,116,0,0,246,8,1,0,0,0,247,248,5,99,0,0,248,249,5,97,0,0,249,
		250,5,115,0,0,250,251,5,101,0,0,251,10,1,0,0,0,252,253,5,99,0,0,253,254,
		5,97,0,0,254,255,5,116,0,0,255,256,5,99,0,0,256,257,5,104,0,0,257,12,1,
		0,0,0,258,259,5,99,0,0,259,260,5,108,0,0,260,261,5,97,0,0,261,262,5,115,
		0,0,262,263,5,115,0,0,263,14,1,0,0,0,264,265,5,99,0,0,265,266,5,111,0,
		0,266,267,5,110,0,0,267,268,5,115,0,0,268,269,5,116,0,0,269,270,5,97,0,
		0,270,271,5,110,0,0,271,272,5,116,0,0,272,16,1,0,0,0,273,274,5,99,0,0,
		274,275,5,111,0,0,275,276,5,110,0,0,276,277,5,115,0,0,277,278,5,116,0,
		0,278,279,5,114,0,0,279,280,5,117,0,0,280,281,5,99,0,0,281,282,5,116,0,
		0,282,283,5,111,0,0,283,284,5,114,0,0,284,18,1,0,0,0,285,286,5,99,0,0,
		286,287,5,117,0,0,287,288,5,114,0,0,288,289,5,114,0,0,289,290,5,121,0,
		0,290,20,1,0,0,0,291,292,5,100,0,0,292,293,5,101,0,0,293,294,5,102,0,0,
		294,295,5,97,0,0,295,296,5,117,0,0,296,297,5,108,0,0,297,298,5,116,0,0,
		298,22,1,0,0,0,299,300,5,101,0,0,300,301,5,108,0,0,301,302,5,115,0,0,302,
		303,5,101,0,0,303,24,1,0,0,0,304,305,5,101,0,0,305,306,5,110,0,0,306,307,
		5,100,0,0,307,26,1,0,0,0,308,309,5,101,0,0,309,310,5,110,0,0,310,311,5,
		117,0,0,311,312,5,109,0,0,312,28,1,0,0,0,313,314,5,102,0,0,314,315,5,111,
		0,0,315,316,5,114,0,0,316,30,1,0,0,0,317,318,5,102,0,0,318,319,5,111,0,
		0,319,320,5,114,0,0,320,321,5,101,0,0,321,322,5,97,0,0,322,323,5,99,0,
		0,323,324,5,104,0,0,324,32,1,0,0,0,325,326,5,102,0,0,326,327,5,117,0,0,
		327,328,5,110,0,0,328,329,5,99,0,0,329,330,5,116,0,0,330,331,5,105,0,0,
		331,332,5,111,0,0,332,333,5,110,0,0,333,34,1,0,0,0,334,335,5,103,0,0,335,
		336,5,108,0,0,336,337,5,111,0,0,337,338,5,98,0,0,338,339,5,97,0,0,339,
		340,5,108,0,0,340,36,1,0,0,0,341,342,5,105,0,0,342,343,5,102,0,0,343,38,
		1,0,0,0,344,345,5,105,0,0,345,346,5,109,0,0,346,347,5,109,0,0,347,348,
		5,117,0,0,348,349,5,116,0,0,349,350,5,97,0,0,350,351,5,98,0,0,351,352,
		5,108,0,0,352,353,5,101,0,0,353,40,1,0,0,0,354,355,5,105,0,0,355,356,5,
		110,0,0,356,42,1,0,0,0,357,358,5,105,0,0,358,359,5,110,0,0,359,360,5,104,
		0,0,360,361,5,101,0,0,361,362,5,114,0,0,362,363,5,105,0,0,363,364,5,116,
		0,0,364,365,5,115,0,0,365,44,1,0,0,0,366,367,5,108,0,0,367,368,5,97,0,
		0,368,369,5,109,0,0,369,370,5,98,0,0,370,371,5,100,0,0,371,372,5,97,0,
		0,372,46,1,0,0,0,373,374,5,108,0,0,374,375,5,101,0,0,375,376,5,116,0,0,
		376,48,1,0,0,0,377,378,5,109,0,0,378,379,5,97,0,0,379,380,5,105,0,0,380,
		381,5,110,0,0,381,50,1,0,0,0,382,383,5,112,0,0,383,384,5,97,0,0,384,385,
		5,114,0,0,385,386,5,116,0,0,386,387,5,105,0,0,387,388,5,97,0,0,388,389,
		5,108,0,0,389,52,1,0,0,0,390,391,5,112,0,0,391,392,5,114,0,0,392,393,5,
		105,0,0,393,394,5,118,0,0,394,395,5,97,0,0,395,396,5,116,0,0,396,397,5,
		101,0,0,397,54,1,0,0,0,398,399,5,112,0,0,399,400,5,114,0,0,400,401,5,111,
		0,0,401,402,5,99,0,0,402,403,5,101,0,0,403,404,5,100,0,0,404,405,5,117,
		0,0,405,406,5,114,0,0,406,407,5,101,0,0,407,56,1,0,0,0,408,409,5,112,0,
		0,409,410,5,114,0,0,410,411,5,111,0,0,411,412,5,112,0,0,412,413,5,101,
		0,0,413,414,5,114,0,0,414,415,5,116,0,0,415,416,5,121,0,0,416,58,1,0,0,
		0,417,418,5,114,0,0,418,419,5,101,0,0,419,420,5,112,0,0,420,421,5,101,
		0,0,421,422,5,97,0,0,422,423,5,116,0,0,423,60,1,0,0,0,424,425,5,114,0,
		0,425,426,5,101,0,0,426,427,5,116,0,0,427,428,5,117,0,0,428,429,5,114,
		0,0,429,430,5,110,0,0,430,62,1,0,0,0,431,432,5,115,0,0,432,433,5,101,0,
		0,433,434,5,108,0,0,434,435,5,102,0,0,435,64,1,0,0,0,436,437,5,115,0,0,
		437,438,5,101,0,0,438,439,5,116,0,0,439,66,1,0,0,0,440,441,5,115,0,0,441,
		442,5,116,0,0,442,443,5,101,0,0,443,444,5,112,0,0,444,68,1,0,0,0,445,446,
		5,115,0,0,446,447,5,119,0,0,447,448,5,105,0,0,448,449,5,116,0,0,449,450,
		5,99,0,0,450,451,5,104,0,0,451,70,1,0,0,0,452,453,5,116,0,0,453,454,5,
		101,0,0,454,455,5,115,0,0,455,456,5,116,0,0,456,72,1,0,0,0,457,458,5,116,
		0,0,458,459,5,104,0,0,459,460,5,101,0,0,460,461,5,110,0,0,461,74,1,0,0,
		0,462,463,5,116,0,0,463,464,5,111,0,0,464,76,1,0,0,0,465,466,5,116,0,0,
		466,467,5,114,0,0,467,468,5,121,0,0,468,78,1,0,0,0,469,470,5,117,0,0,470,
		471,5,110,0,0,471,472,5,116,0,0,472,473,5,105,0,0,473,474,5,108,0,0,474,
		80,1,0,0,0,475,476,5,118,0,0,476,477,5,97,0,0,477,478,5,114,0,0,478,82,
		1,0,0,0,479,480,5,119,0,0,480,481,5,104,0,0,481,482,5,105,0,0,482,483,
		5,108,0,0,483,484,5,101,0,0,484,84,1,0,0,0,485,486,5,119,0,0,486,487,5,
		105,0,0,487,488,5,116,0,0,488,489,5,104,0,0,489,86,1,0,0,0,490,491,5,116,
		0,0,491,492,5,114,0,0,492,493,5,117,0,0,493,500,5,101,0,0,494,495,5,102,
		0,0,495,496,5,97,0,0,496,497,5,108,0,0,497,498,5,115,0,0,498,500,5,101,
		0,0,499,490,1,0,0,0,499,494,1,0,0,0,500,88,1,0,0,0,501,502,5,73,0,0,502,
		503,5,110,0,0,503,524,5,116,0,0,504,505,5,70,0,0,505,506,5,108,0,0,506,
		507,5,111,0,0,507,508,5,97,0,0,508,524,5,116,0,0,509,510,5,67,0,0,510,
		511,5,104,0,0,511,512,5,97,0,0,512,524,5,114,0,0,513,514,5,83,0,0,514,
		515,5,116,0,0,515,516,5,114,0,0,516,517,5,105,0,0,517,518,5,110,0,0,518,
		524,5,103,0,0,519,520,5,66,0,0,520,521,5,111,0,0,521,522,5,111,0,0,522,
		524,5,108,0,0,523,501,1,0,0,0,523,504,1,0,0,0,523,509,1,0,0,0,523,513,
		1,0,0,0,523,519,1,0,0,0,524,90,1,0,0,0,525,526,5,65,0,0,526,527,5,114,
		0,0,527,528,5,114,0,0,528,529,5,97,0,0,529,530,5,121,0,0,530,92,1,0,0,
		0,531,532,5,76,0,0,532,533,5,105,0,0,533,534,5,115,0,0,534,535,5,116,0,
		0,535,94,1,0,0,0,536,537,5,68,0,0,537,538,5,105,0,0,538,539,5,99,0,0,539,
		540,5,116,0,0,540,541,5,105,0,0,541,542,5,111,0,0,542,543,5,110,0,0,543,
		544,5,97,0,0,544,545,5,114,0,0,545,546,5,121,0,0,546,96,1,0,0,0,547,548,
		5,73,0,0,548,549,5,116,0,0,549,550,5,101,0,0,550,551,5,114,0,0,551,98,
		1,0,0,0,552,553,5,61,0,0,553,100,1,0,0,0,554,555,5,45,0,0,555,556,5,62,
		0,0,556,102,1,0,0,0,557,558,5,123,0,0,558,104,1,0,0,0,559,560,5,125,0,
		0,560,106,1,0,0,0,561,562,5,91,0,0,562,108,1,0,0,0,563,564,5,93,0,0,564,
		110,1,0,0,0,565,566,5,40,0,0,566,112,1,0,0,0,567,568,5,41,0,0,568,114,
		1,0,0,0,569,570,5,46,0,0,570,571,5,46,0,0,571,116,1,0,0,0,572,573,5,46,
		0,0,573,118,1,0,0,0,574,575,5,44,0,0,575,120,1,0,0,0,576,577,5,58,0,0,
		577,122,1,0,0,0,578,579,5,43,0,0,579,124,1,0,0,0,580,581,5,45,0,0,581,
		126,1,0,0,0,582,583,5,42,0,0,583,128,1,0,0,0,584,585,5,47,0,0,585,130,
		1,0,0,0,586,587,5,94,0,0,587,132,1,0,0,0,588,589,5,109,0,0,589,590,5,111,
		0,0,590,591,5,100,0,0,591,134,1,0,0,0,592,593,5,100,0,0,593,594,5,105,
		0,0,594,595,5,118,0,0,595,136,1,0,0,0,596,597,5,60,0,0,597,138,1,0,0,0,
		598,599,5,62,0,0,599,140,1,0,0,0,600,601,5,97,0,0,601,602,5,110,0,0,602,
		603,5,100,0,0,603,142,1,0,0,0,604,605,5,110,0,0,605,606,5,111,0,0,606,
		607,5,116,0,0,607,144,1,0,0,0,608,609,5,111,0,0,609,610,5,114,0,0,610,
		146,1,0,0,0,611,612,5,120,0,0,612,613,5,111,0,0,613,614,5,114,0,0,614,
		148,1,0,0,0,615,616,5,105,0,0,616,617,5,115,0,0,617,150,1,0,0,0,618,619,
		5,60,0,0,619,633,5,62,0,0,620,621,5,105,0,0,621,622,5,115,0,0,622,626,
		1,0,0,0,623,625,3,185,92,0,624,623,1,0,0,0,625,628,1,0,0,0,626,624,1,0,
		0,0,626,627,1,0,0,0,627,629,1,0,0,0,628,626,1,0,0,0,629,630,5,110,0,0,
		630,631,5,111,0,0,631,633,5,116,0,0,632,618,1,0,0,0,632,620,1,0,0,0,633,
		152,1,0,0,0,634,635,5,60,0,0,635,636,5,61,0,0,636,154,1,0,0,0,637,638,
		5,62,0,0,638,639,5,61,0,0,639,156,1,0,0,0,640,641,3,193,96,0,641,158,1,
		0,0,0,642,643,3,191,95,0,643,160,1,0,0,0,644,648,7,1,0,0,645,647,7,1,0,
		0,646,645,1,0,0,0,647,650,1,0,0,0,648,646,1,0,0,0,648,649,1,0,0,0,649,
		162,1,0,0,0,650,648,1,0,0,0,651,652,3,161,80,0,652,653,3,117,58,0,653,
		655,3,161,80,0,654,656,3,175,87,0,655,654,1,0,0,0,655,656,1,0,0,0,656,
		164,1,0,0,0,657,660,5,39,0,0,658,661,8,2,0,0,659,661,3,177,88,0,660,658,
		1,0,0,0,660,659,1,0,0,0,661,662,1,0,0,0,662,663,5,39,0,0,663,166,1,0,0,
		0,664,669,5,34,0,0,665,668,8,3,0,0,666,668,3,177,88,0,667,665,1,0,0,0,
		667,666,1,0,0,0,668,671,1,0,0,0,669,667,1,0,0,0,669,670,1,0,0,0,670,672,
		1,0,0,0,671,669,1,0,0,0,672,673,5,34,0,0,673,168,1,0,0,0,674,676,3,185,
		92,0,675,674,1,0,0,0,676,677,1,0,0,0,677,675,1,0,0,0,677,678,1,0,0,0,678,
		679,1,0,0,0,679,680,6,84,0,0,680,170,1,0,0,0,681,682,8,4,0,0,682,172,1,
		0,0,0,683,684,7,4,0,0,684,174,1,0,0,0,685,688,7,5,0,0,686,689,3,123,61,
		0,687,689,3,125,62,0,688,686,1,0,0,0,688,687,1,0,0,0,688,689,1,0,0,0,689,
		690,1,0,0,0,690,691,3,161,80,0,691,176,1,0,0,0,692,696,3,179,89,0,693,
		696,3,181,90,0,694,696,3,205,102,0,695,692,1,0,0,0,695,693,1,0,0,0,695,
		694,1,0,0,0,696,178,1,0,0,0,697,698,5,92,0,0,698,720,5,39,0,0,699,700,
		5,92,0,0,700,720,5,34,0,0,701,702,5,92,0,0,702,720,5,92,0,0,703,704,5,
		92,0,0,704,720,5,48,0,0,705,706,5,92,0,0,706,720,5,97,0,0,707,708,5,92,
		0,0,708,720,5,98,0,0,709,710,5,92,0,0,710,720,5,102,0,0,711,712,5,92,0,
		0,712,720,5,110,0,0,713,714,5,92,0,0,714,720,5,114,0,0,715,716,5,92,0,
		0,716,720,5,116,0,0,717,718,5,92,0,0,718,720,5,118,0,0,719,697,1,0,0,0,
		719,699,1,0,0,0,719,701,1,0,0,0,719,703,1,0,0,0,719,705,1,0,0,0,719,707,
		1,0,0,0,719,709,1,0,0,0,719,711,1,0,0,0,719,713,1,0,0,0,719,715,1,0,0,
		0,719,717,1,0,0,0,720,180,1,0,0,0,721,722,5,92,0,0,722,723,5,120,0,0,723,
		724,1,0,0,0,724,747,3,207,103,0,725,726,5,92,0,0,726,727,5,120,0,0,727,
		728,1,0,0,0,728,729,3,207,103,0,729,730,3,207,103,0,730,747,1,0,0,0,731,
		732,5,92,0,0,732,733,5,120,0,0,733,734,1,0,0,0,734,735,3,207,103,0,735,
		736,3,207,103,0,736,737,3,207,103,0,737,747,1,0,0,0,738,739,5,92,0,0,739,
		740,5,120,0,0,740,741,1,0,0,0,741,742,3,207,103,0,742,743,3,207,103,0,
		743,744,3,207,103,0,744,745,3,207,103,0,745,747,1,0,0,0,746,721,1,0,0,
		0,746,725,1,0,0,0,746,731,1,0,0,0,746,738,1,0,0,0,747,182,1,0,0,0,748,
		749,5,13,0,0,749,752,5,10,0,0,750,752,7,4,0,0,751,748,1,0,0,0,751,750,
		1,0,0,0,752,184,1,0,0,0,753,756,3,187,93,0,754,756,7,6,0,0,755,753,1,0,
		0,0,755,754,1,0,0,0,756,186,1,0,0,0,757,758,7,7,0,0,758,188,1,0,0,0,759,
		762,3,211,105,0,760,762,3,209,104,0,761,759,1,0,0,0,761,760,1,0,0,0,762,
		766,1,0,0,0,763,765,3,195,97,0,764,763,1,0,0,0,765,768,1,0,0,0,766,764,
		1,0,0,0,766,767,1,0,0,0,767,190,1,0,0,0,768,766,1,0,0,0,769,773,3,211,
		105,0,770,772,3,195,97,0,771,770,1,0,0,0,772,775,1,0,0,0,773,771,1,0,0,
		0,773,774,1,0,0,0,774,192,1,0,0,0,775,773,1,0,0,0,776,780,3,209,104,0,
		777,779,3,195,97,0,778,777,1,0,0,0,779,782,1,0,0,0,780,778,1,0,0,0,780,
		781,1,0,0,0,781,194,1,0,0,0,782,780,1,0,0,0,783,788,3,209,104,0,784,788,
		3,211,105,0,785,788,3,199,99,0,786,788,5,95,0,0,787,783,1,0,0,0,787,784,
		1,0,0,0,787,785,1,0,0,0,787,786,1,0,0,0,788,196,1,0,0,0,789,793,3,209,
		104,0,790,793,3,211,105,0,791,793,3,205,102,0,792,789,1,0,0,0,792,790,
		1,0,0,0,792,791,1,0,0,0,793,198,1,0,0,0,794,797,3,213,106,0,795,797,3,
		205,102,0,796,794,1,0,0,0,796,795,1,0,0,0,797,200,1,0,0,0,798,799,3,205,
		102,0,799,202,1,0,0,0,800,801,3,205,102,0,801,204,1,0,0,0,802,803,5,92,
		0,0,803,804,5,117,0,0,804,805,1,0,0,0,805,806,3,207,103,0,806,807,3,207,
		103,0,807,808,3,207,103,0,808,809,3,207,103,0,809,823,1,0,0,0,810,811,
		5,92,0,0,811,812,5,85,0,0,812,813,1,0,0,0,813,814,3,207,103,0,814,815,
		3,207,103,0,815,816,3,207,103,0,816,817,3,207,103,0,817,818,3,207,103,
		0,818,819,3,207,103,0,819,820,3,207,103,0,820,821,3,207,103,0,821,823,
		1,0,0,0,822,802,1,0,0,0,822,810,1,0,0,0,823,206,1,0,0,0,824,826,7,8,0,
		0,825,824,1,0,0,0,826,208,1,0,0,0,827,828,2,65,90,0,828,210,1,0,0,0,829,
		830,2,97,122,0,830,212,1,0,0,0,831,832,2,48,57,0,832,214,1,0,0,0,833,835,
		5,13,0,0,834,833,1,0,0,0,834,835,1,0,0,0,835,836,1,0,0,0,836,839,5,10,
		0,0,837,839,5,13,0,0,838,834,1,0,0,0,838,837,1,0,0,0,839,216,1,0,0,0,840,
		842,7,9,0,0,841,840,1,0,0,0,842,843,1,0,0,0,843,841,1,0,0,0,843,844,1,
		0,0,0,844,845,1,0,0,0,845,846,6,108,0,0,846,218,1,0,0,0,32,0,222,225,231,
		499,523,626,632,648,655,660,667,669,677,688,695,719,746,751,755,761,766,
		773,780,787,792,796,822,825,834,838,843,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
