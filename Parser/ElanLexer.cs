//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c://Elan//Repository//Parser//Elan.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class ElanLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		NL=1, SINGLE_LINE_COMMENT=2, COMMENT_MARKER=3, ABSTRACT=4, CALL=5, CASE=6, 
		CATCH=7, CLASS=8, CONSTANT=9, CONSTRUCTOR=10, CURRY=11, DEFAULT=12, ELSE=13, 
		END=14, ENUM=15, FOR=16, FOREACH=17, FUNCTION=18, GLOBAL=19, IF=20, IMMUTABLE=21, 
		IN=22, INHERITS=23, LAMBDA=24, LET=25, MAIN=26, PARTIAL=27, PRIVATE=28, 
		PROCEDURE=29, PROPERTY=30, REPEAT=31, RETURN=32, SELF=33, SET=34, STEP=35, 
		SWITCH=36, TEST=37, THEN=38, TO=39, TRY=40, UNTIL=41, VAR=42, WHILE=43, 
		WITH=44, BOOL_VALUE=45, VALUE_TYPE=46, ARRAY=47, LIST=48, DICTIONARY=49, 
		ITERABLE=50, ASSIGN=51, ARROW=52, OPEN_BRACE=53, CLOSE_BRACE=54, OPEN_SQ_BRACKET=55, 
		CLOSE_SQ_BRACKET=56, OPEN_BRACKET=57, CLOSE_BRACKET=58, DOUBLE_DOT=59, 
		DOT=60, COMMA=61, COLON=62, PLUS=63, MINUS=64, MULT=65, DIVIDE=66, POWER=67, 
		MOD=68, INT_DIV=69, LT=70, GT=71, OP_AND=72, OP_NOT=73, OP_OR=74, OP_XOR=75, 
		OP_EQ=76, OP_NE=77, OP_LE=78, OP_GE=79, TYPENAME=80, IDENTIFIER=81, LITERAL_INTEGER=82, 
		LITERAL_FLOAT=83, LITERAL_CHAR=84, LITERAL_STRING=85, WHITESPACES=86, 
		NEWLINE=87, WS=88;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"NL", "SINGLE_LINE_COMMENT", "COMMENT_MARKER", "ABSTRACT", "CALL", "CASE", 
		"CATCH", "CLASS", "CONSTANT", "CONSTRUCTOR", "CURRY", "DEFAULT", "ELSE", 
		"END", "ENUM", "FOR", "FOREACH", "FUNCTION", "GLOBAL", "IF", "IMMUTABLE", 
		"IN", "INHERITS", "LAMBDA", "LET", "MAIN", "PARTIAL", "PRIVATE", "PROCEDURE", 
		"PROPERTY", "REPEAT", "RETURN", "SELF", "SET", "STEP", "SWITCH", "TEST", 
		"THEN", "TO", "TRY", "UNTIL", "VAR", "WHILE", "WITH", "BOOL_VALUE", "VALUE_TYPE", 
		"ARRAY", "LIST", "DICTIONARY", "ITERABLE", "ASSIGN", "ARROW", "OPEN_BRACE", 
		"CLOSE_BRACE", "OPEN_SQ_BRACKET", "CLOSE_SQ_BRACKET", "OPEN_BRACKET", 
		"CLOSE_BRACKET", "DOUBLE_DOT", "DOT", "COMMA", "COLON", "PLUS", "MINUS", 
		"MULT", "DIVIDE", "POWER", "MOD", "INT_DIV", "LT", "GT", "OP_AND", "OP_NOT", 
		"OP_OR", "OP_XOR", "OP_EQ", "OP_NE", "OP_LE", "OP_GE", "TYPENAME", "IDENTIFIER", 
		"LITERAL_INTEGER", "LITERAL_FLOAT", "LITERAL_CHAR", "LITERAL_STRING", 
		"WHITESPACES", "InputCharacter", "NewLineCharacter", "ExponentPart", "CommonCharacter", 
		"SimpleEscapeSequence", "HexEscapeSequence", "NewLine", "Whitespace", 
		"UnicodeClassZS", "IdentifierStartingUCorLC", "IdentifierStartingLC", 
		"IdentifierStartingUC", "IdentifierPartCharacter", "LetterCharacter", 
		"DecimalDigitCharacter", "ConnectingCharacter", "FormattingCharacter", 
		"UnicodeEscapeSequence", "HexDigit", "UnicodeClassLU", "UnicodeClassLL", 
		"UnicodeClassND", "NEWLINE", "WS"
	};


	public ElanLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ElanLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, "'#'", "'abstract'", "'call'", "'case'", "'catch'", 
		"'class'", "'constant'", "'constructor'", "'curry'", "'default'", "'else'", 
		"'end'", "'enum'", "'for'", "'foreach'", "'function'", "'global'", "'if'", 
		"'immutable'", "'in'", "'inherits'", "'lambda'", "'let'", "'main'", "'partial'", 
		"'private'", "'procedure'", "'property'", "'repeat'", "'return'", "'self'", 
		"'set'", "'step'", "'switch'", "'test'", "'then'", "'to'", "'try'", "'until'", 
		"'var'", "'while'", "'with'", null, null, "'Array'", "'List'", "'Dictionary'", 
		"'Iter'", "'='", "'->'", "'{'", "'}'", "'['", "']'", "'('", "')'", "'..'", 
		"'.'", "','", "':'", "'+'", "'-'", "'*'", "'/'", "'^'", "'mod'", "'div'", 
		"'<'", "'>'", "'and'", "'not'", "'or'", "'xor'", "'is'", null, "'<='", 
		"'>='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "NL", "SINGLE_LINE_COMMENT", "COMMENT_MARKER", "ABSTRACT", "CALL", 
		"CASE", "CATCH", "CLASS", "CONSTANT", "CONSTRUCTOR", "CURRY", "DEFAULT", 
		"ELSE", "END", "ENUM", "FOR", "FOREACH", "FUNCTION", "GLOBAL", "IF", "IMMUTABLE", 
		"IN", "INHERITS", "LAMBDA", "LET", "MAIN", "PARTIAL", "PRIVATE", "PROCEDURE", 
		"PROPERTY", "REPEAT", "RETURN", "SELF", "SET", "STEP", "SWITCH", "TEST", 
		"THEN", "TO", "TRY", "UNTIL", "VAR", "WHILE", "WITH", "BOOL_VALUE", "VALUE_TYPE", 
		"ARRAY", "LIST", "DICTIONARY", "ITERABLE", "ASSIGN", "ARROW", "OPEN_BRACE", 
		"CLOSE_BRACE", "OPEN_SQ_BRACKET", "CLOSE_SQ_BRACKET", "OPEN_BRACKET", 
		"CLOSE_BRACKET", "DOUBLE_DOT", "DOT", "COMMA", "COLON", "PLUS", "MINUS", 
		"MULT", "DIVIDE", "POWER", "MOD", "INT_DIV", "LT", "GT", "OP_AND", "OP_NOT", 
		"OP_OR", "OP_XOR", "OP_EQ", "OP_NE", "OP_LE", "OP_GE", "TYPENAME", "IDENTIFIER", 
		"LITERAL_INTEGER", "LITERAL_FLOAT", "LITERAL_CHAR", "LITERAL_STRING", 
		"WHITESPACES", "NEWLINE", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Elan.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static ElanLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,88,854,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
		7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,
		7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,
		7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,
		104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,1,0,4,
		0,223,8,0,11,0,12,0,224,1,1,3,1,228,8,1,1,1,1,1,5,1,232,8,1,10,1,12,1,
		235,9,1,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,
		4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,
		1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,
		9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,
		1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,14,
		1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,
		1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,
		1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
		1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
		1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,25,1,25,
		1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,
		1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,
		1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,
		1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,
		1,32,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,
		1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,38,
		1,38,1,38,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,
		1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,44,
		1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,3,44,507,8,44,1,45,1,45,1,45,1,
		45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,
		45,1,45,1,45,1,45,1,45,3,45,531,8,45,1,46,1,46,1,46,1,46,1,46,1,46,1,47,
		1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,
		1,48,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,51,1,51,1,51,1,52,1,52,1,53,
		1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,57,1,57,1,58,1,58,1,58,1,59,1,59,
		1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,65,1,65,1,66,1,66,
		1,67,1,67,1,67,1,67,1,68,1,68,1,68,1,68,1,69,1,69,1,70,1,70,1,71,1,71,
		1,71,1,71,1,72,1,72,1,72,1,72,1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,75,
		1,75,1,75,1,76,1,76,1,76,1,76,1,76,1,76,5,76,632,8,76,10,76,12,76,635,
		9,76,1,76,1,76,1,76,3,76,640,8,76,1,77,1,77,1,77,1,78,1,78,1,78,1,79,1,
		79,1,80,1,80,1,81,1,81,5,81,654,8,81,10,81,12,81,657,9,81,1,82,1,82,1,
		82,1,82,3,82,663,8,82,1,83,1,83,1,83,3,83,668,8,83,1,83,1,83,1,84,1,84,
		1,84,5,84,675,8,84,10,84,12,84,678,9,84,1,84,1,84,1,85,4,85,683,8,85,11,
		85,12,85,684,1,85,1,85,1,86,1,86,1,87,1,87,1,88,1,88,1,88,3,88,696,8,88,
		1,88,1,88,1,89,1,89,1,89,3,89,703,8,89,1,90,1,90,1,90,1,90,1,90,1,90,1,
		90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,
		90,1,90,3,90,727,8,90,1,91,1,91,1,91,1,91,1,91,1,91,1,91,1,91,1,91,1,91,
		1,91,1,91,1,91,1,91,1,91,1,91,1,91,1,91,1,91,1,91,1,91,1,91,1,91,1,91,
		1,91,3,91,754,8,91,1,92,1,92,1,92,3,92,759,8,92,1,93,1,93,3,93,763,8,93,
		1,94,1,94,1,95,1,95,3,95,769,8,95,1,95,5,95,772,8,95,10,95,12,95,775,9,
		95,1,96,1,96,5,96,779,8,96,10,96,12,96,782,9,96,1,97,1,97,5,97,786,8,97,
		10,97,12,97,789,9,97,1,98,1,98,1,98,1,98,3,98,795,8,98,1,99,1,99,1,99,
		3,99,800,8,99,1,100,1,100,3,100,804,8,100,1,101,1,101,1,102,1,102,1,103,
		1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,
		1,103,1,103,1,103,1,103,1,103,1,103,1,103,3,103,830,8,103,1,104,3,104,
		833,8,104,1,105,1,105,1,106,1,106,1,107,1,107,1,108,3,108,842,8,108,1,
		108,1,108,3,108,846,8,108,1,109,4,109,849,8,109,11,109,12,109,850,1,109,
		1,109,0,0,110,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,
		25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,
		49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,
		73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,
		97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,
		59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,
		69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,157,
		79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,173,0,175,0,177,0,
		179,0,181,0,183,0,185,0,187,0,189,0,191,0,193,0,195,0,197,0,199,0,201,
		0,203,0,205,0,207,0,209,0,211,0,213,0,215,0,217,87,219,88,1,0,10,2,0,10,
		10,12,13,1,0,48,57,5,0,10,10,13,13,39,39,92,92,133,133,2,0,34,34,133,133,
		3,0,10,10,13,13,133,133,2,0,69,69,101,101,2,0,9,9,11,12,2,0,32,32,160,
		160,3,0,48,57,65,70,97,102,2,0,9,9,32,32,880,0,1,1,0,0,0,0,3,1,0,0,0,0,
		5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,
		0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
		1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,
		0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,
		1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,
		0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,
		1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,
		0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,
		1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,
		0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,
		0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,
		0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,
		0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,
		0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,
		0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,
		0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,217,1,0,
		0,0,0,219,1,0,0,0,1,222,1,0,0,0,3,227,1,0,0,0,5,238,1,0,0,0,7,240,1,0,
		0,0,9,249,1,0,0,0,11,254,1,0,0,0,13,259,1,0,0,0,15,265,1,0,0,0,17,271,
		1,0,0,0,19,280,1,0,0,0,21,292,1,0,0,0,23,298,1,0,0,0,25,306,1,0,0,0,27,
		311,1,0,0,0,29,315,1,0,0,0,31,320,1,0,0,0,33,324,1,0,0,0,35,332,1,0,0,
		0,37,341,1,0,0,0,39,348,1,0,0,0,41,351,1,0,0,0,43,361,1,0,0,0,45,364,1,
		0,0,0,47,373,1,0,0,0,49,380,1,0,0,0,51,384,1,0,0,0,53,389,1,0,0,0,55,397,
		1,0,0,0,57,405,1,0,0,0,59,415,1,0,0,0,61,424,1,0,0,0,63,431,1,0,0,0,65,
		438,1,0,0,0,67,443,1,0,0,0,69,447,1,0,0,0,71,452,1,0,0,0,73,459,1,0,0,
		0,75,464,1,0,0,0,77,469,1,0,0,0,79,472,1,0,0,0,81,476,1,0,0,0,83,482,1,
		0,0,0,85,486,1,0,0,0,87,492,1,0,0,0,89,506,1,0,0,0,91,530,1,0,0,0,93,532,
		1,0,0,0,95,538,1,0,0,0,97,543,1,0,0,0,99,554,1,0,0,0,101,559,1,0,0,0,103,
		561,1,0,0,0,105,564,1,0,0,0,107,566,1,0,0,0,109,568,1,0,0,0,111,570,1,
		0,0,0,113,572,1,0,0,0,115,574,1,0,0,0,117,576,1,0,0,0,119,579,1,0,0,0,
		121,581,1,0,0,0,123,583,1,0,0,0,125,585,1,0,0,0,127,587,1,0,0,0,129,589,
		1,0,0,0,131,591,1,0,0,0,133,593,1,0,0,0,135,595,1,0,0,0,137,599,1,0,0,
		0,139,603,1,0,0,0,141,605,1,0,0,0,143,607,1,0,0,0,145,611,1,0,0,0,147,
		615,1,0,0,0,149,618,1,0,0,0,151,622,1,0,0,0,153,639,1,0,0,0,155,641,1,
		0,0,0,157,644,1,0,0,0,159,647,1,0,0,0,161,649,1,0,0,0,163,651,1,0,0,0,
		165,658,1,0,0,0,167,664,1,0,0,0,169,671,1,0,0,0,171,682,1,0,0,0,173,688,
		1,0,0,0,175,690,1,0,0,0,177,692,1,0,0,0,179,702,1,0,0,0,181,726,1,0,0,
		0,183,753,1,0,0,0,185,758,1,0,0,0,187,762,1,0,0,0,189,764,1,0,0,0,191,
		768,1,0,0,0,193,776,1,0,0,0,195,783,1,0,0,0,197,794,1,0,0,0,199,799,1,
		0,0,0,201,803,1,0,0,0,203,805,1,0,0,0,205,807,1,0,0,0,207,829,1,0,0,0,
		209,832,1,0,0,0,211,834,1,0,0,0,213,836,1,0,0,0,215,838,1,0,0,0,217,845,
		1,0,0,0,219,848,1,0,0,0,221,223,7,0,0,0,222,221,1,0,0,0,223,224,1,0,0,
		0,224,222,1,0,0,0,224,225,1,0,0,0,225,2,1,0,0,0,226,228,3,1,0,0,227,226,
		1,0,0,0,227,228,1,0,0,0,228,229,1,0,0,0,229,233,3,5,2,0,230,232,3,173,
		86,0,231,230,1,0,0,0,232,235,1,0,0,0,233,231,1,0,0,0,233,234,1,0,0,0,234,
		236,1,0,0,0,235,233,1,0,0,0,236,237,6,1,0,0,237,4,1,0,0,0,238,239,5,35,
		0,0,239,6,1,0,0,0,240,241,5,97,0,0,241,242,5,98,0,0,242,243,5,115,0,0,
		243,244,5,116,0,0,244,245,5,114,0,0,245,246,5,97,0,0,246,247,5,99,0,0,
		247,248,5,116,0,0,248,8,1,0,0,0,249,250,5,99,0,0,250,251,5,97,0,0,251,
		252,5,108,0,0,252,253,5,108,0,0,253,10,1,0,0,0,254,255,5,99,0,0,255,256,
		5,97,0,0,256,257,5,115,0,0,257,258,5,101,0,0,258,12,1,0,0,0,259,260,5,
		99,0,0,260,261,5,97,0,0,261,262,5,116,0,0,262,263,5,99,0,0,263,264,5,104,
		0,0,264,14,1,0,0,0,265,266,5,99,0,0,266,267,5,108,0,0,267,268,5,97,0,0,
		268,269,5,115,0,0,269,270,5,115,0,0,270,16,1,0,0,0,271,272,5,99,0,0,272,
		273,5,111,0,0,273,274,5,110,0,0,274,275,5,115,0,0,275,276,5,116,0,0,276,
		277,5,97,0,0,277,278,5,110,0,0,278,279,5,116,0,0,279,18,1,0,0,0,280,281,
		5,99,0,0,281,282,5,111,0,0,282,283,5,110,0,0,283,284,5,115,0,0,284,285,
		5,116,0,0,285,286,5,114,0,0,286,287,5,117,0,0,287,288,5,99,0,0,288,289,
		5,116,0,0,289,290,5,111,0,0,290,291,5,114,0,0,291,20,1,0,0,0,292,293,5,
		99,0,0,293,294,5,117,0,0,294,295,5,114,0,0,295,296,5,114,0,0,296,297,5,
		121,0,0,297,22,1,0,0,0,298,299,5,100,0,0,299,300,5,101,0,0,300,301,5,102,
		0,0,301,302,5,97,0,0,302,303,5,117,0,0,303,304,5,108,0,0,304,305,5,116,
		0,0,305,24,1,0,0,0,306,307,5,101,0,0,307,308,5,108,0,0,308,309,5,115,0,
		0,309,310,5,101,0,0,310,26,1,0,0,0,311,312,5,101,0,0,312,313,5,110,0,0,
		313,314,5,100,0,0,314,28,1,0,0,0,315,316,5,101,0,0,316,317,5,110,0,0,317,
		318,5,117,0,0,318,319,5,109,0,0,319,30,1,0,0,0,320,321,5,102,0,0,321,322,
		5,111,0,0,322,323,5,114,0,0,323,32,1,0,0,0,324,325,5,102,0,0,325,326,5,
		111,0,0,326,327,5,114,0,0,327,328,5,101,0,0,328,329,5,97,0,0,329,330,5,
		99,0,0,330,331,5,104,0,0,331,34,1,0,0,0,332,333,5,102,0,0,333,334,5,117,
		0,0,334,335,5,110,0,0,335,336,5,99,0,0,336,337,5,116,0,0,337,338,5,105,
		0,0,338,339,5,111,0,0,339,340,5,110,0,0,340,36,1,0,0,0,341,342,5,103,0,
		0,342,343,5,108,0,0,343,344,5,111,0,0,344,345,5,98,0,0,345,346,5,97,0,
		0,346,347,5,108,0,0,347,38,1,0,0,0,348,349,5,105,0,0,349,350,5,102,0,0,
		350,40,1,0,0,0,351,352,5,105,0,0,352,353,5,109,0,0,353,354,5,109,0,0,354,
		355,5,117,0,0,355,356,5,116,0,0,356,357,5,97,0,0,357,358,5,98,0,0,358,
		359,5,108,0,0,359,360,5,101,0,0,360,42,1,0,0,0,361,362,5,105,0,0,362,363,
		5,110,0,0,363,44,1,0,0,0,364,365,5,105,0,0,365,366,5,110,0,0,366,367,5,
		104,0,0,367,368,5,101,0,0,368,369,5,114,0,0,369,370,5,105,0,0,370,371,
		5,116,0,0,371,372,5,115,0,0,372,46,1,0,0,0,373,374,5,108,0,0,374,375,5,
		97,0,0,375,376,5,109,0,0,376,377,5,98,0,0,377,378,5,100,0,0,378,379,5,
		97,0,0,379,48,1,0,0,0,380,381,5,108,0,0,381,382,5,101,0,0,382,383,5,116,
		0,0,383,50,1,0,0,0,384,385,5,109,0,0,385,386,5,97,0,0,386,387,5,105,0,
		0,387,388,5,110,0,0,388,52,1,0,0,0,389,390,5,112,0,0,390,391,5,97,0,0,
		391,392,5,114,0,0,392,393,5,116,0,0,393,394,5,105,0,0,394,395,5,97,0,0,
		395,396,5,108,0,0,396,54,1,0,0,0,397,398,5,112,0,0,398,399,5,114,0,0,399,
		400,5,105,0,0,400,401,5,118,0,0,401,402,5,97,0,0,402,403,5,116,0,0,403,
		404,5,101,0,0,404,56,1,0,0,0,405,406,5,112,0,0,406,407,5,114,0,0,407,408,
		5,111,0,0,408,409,5,99,0,0,409,410,5,101,0,0,410,411,5,100,0,0,411,412,
		5,117,0,0,412,413,5,114,0,0,413,414,5,101,0,0,414,58,1,0,0,0,415,416,5,
		112,0,0,416,417,5,114,0,0,417,418,5,111,0,0,418,419,5,112,0,0,419,420,
		5,101,0,0,420,421,5,114,0,0,421,422,5,116,0,0,422,423,5,121,0,0,423,60,
		1,0,0,0,424,425,5,114,0,0,425,426,5,101,0,0,426,427,5,112,0,0,427,428,
		5,101,0,0,428,429,5,97,0,0,429,430,5,116,0,0,430,62,1,0,0,0,431,432,5,
		114,0,0,432,433,5,101,0,0,433,434,5,116,0,0,434,435,5,117,0,0,435,436,
		5,114,0,0,436,437,5,110,0,0,437,64,1,0,0,0,438,439,5,115,0,0,439,440,5,
		101,0,0,440,441,5,108,0,0,441,442,5,102,0,0,442,66,1,0,0,0,443,444,5,115,
		0,0,444,445,5,101,0,0,445,446,5,116,0,0,446,68,1,0,0,0,447,448,5,115,0,
		0,448,449,5,116,0,0,449,450,5,101,0,0,450,451,5,112,0,0,451,70,1,0,0,0,
		452,453,5,115,0,0,453,454,5,119,0,0,454,455,5,105,0,0,455,456,5,116,0,
		0,456,457,5,99,0,0,457,458,5,104,0,0,458,72,1,0,0,0,459,460,5,116,0,0,
		460,461,5,101,0,0,461,462,5,115,0,0,462,463,5,116,0,0,463,74,1,0,0,0,464,
		465,5,116,0,0,465,466,5,104,0,0,466,467,5,101,0,0,467,468,5,110,0,0,468,
		76,1,0,0,0,469,470,5,116,0,0,470,471,5,111,0,0,471,78,1,0,0,0,472,473,
		5,116,0,0,473,474,5,114,0,0,474,475,5,121,0,0,475,80,1,0,0,0,476,477,5,
		117,0,0,477,478,5,110,0,0,478,479,5,116,0,0,479,480,5,105,0,0,480,481,
		5,108,0,0,481,82,1,0,0,0,482,483,5,118,0,0,483,484,5,97,0,0,484,485,5,
		114,0,0,485,84,1,0,0,0,486,487,5,119,0,0,487,488,5,104,0,0,488,489,5,105,
		0,0,489,490,5,108,0,0,490,491,5,101,0,0,491,86,1,0,0,0,492,493,5,119,0,
		0,493,494,5,105,0,0,494,495,5,116,0,0,495,496,5,104,0,0,496,88,1,0,0,0,
		497,498,5,116,0,0,498,499,5,114,0,0,499,500,5,117,0,0,500,507,5,101,0,
		0,501,502,5,102,0,0,502,503,5,97,0,0,503,504,5,108,0,0,504,505,5,115,0,
		0,505,507,5,101,0,0,506,497,1,0,0,0,506,501,1,0,0,0,507,90,1,0,0,0,508,
		509,5,73,0,0,509,510,5,110,0,0,510,531,5,116,0,0,511,512,5,70,0,0,512,
		513,5,108,0,0,513,514,5,111,0,0,514,515,5,97,0,0,515,531,5,116,0,0,516,
		517,5,67,0,0,517,518,5,104,0,0,518,519,5,97,0,0,519,531,5,114,0,0,520,
		521,5,83,0,0,521,522,5,116,0,0,522,523,5,114,0,0,523,524,5,105,0,0,524,
		525,5,110,0,0,525,531,5,103,0,0,526,527,5,66,0,0,527,528,5,111,0,0,528,
		529,5,111,0,0,529,531,5,108,0,0,530,508,1,0,0,0,530,511,1,0,0,0,530,516,
		1,0,0,0,530,520,1,0,0,0,530,526,1,0,0,0,531,92,1,0,0,0,532,533,5,65,0,
		0,533,534,5,114,0,0,534,535,5,114,0,0,535,536,5,97,0,0,536,537,5,121,0,
		0,537,94,1,0,0,0,538,539,5,76,0,0,539,540,5,105,0,0,540,541,5,115,0,0,
		541,542,5,116,0,0,542,96,1,0,0,0,543,544,5,68,0,0,544,545,5,105,0,0,545,
		546,5,99,0,0,546,547,5,116,0,0,547,548,5,105,0,0,548,549,5,111,0,0,549,
		550,5,110,0,0,550,551,5,97,0,0,551,552,5,114,0,0,552,553,5,121,0,0,553,
		98,1,0,0,0,554,555,5,73,0,0,555,556,5,116,0,0,556,557,5,101,0,0,557,558,
		5,114,0,0,558,100,1,0,0,0,559,560,5,61,0,0,560,102,1,0,0,0,561,562,5,45,
		0,0,562,563,5,62,0,0,563,104,1,0,0,0,564,565,5,123,0,0,565,106,1,0,0,0,
		566,567,5,125,0,0,567,108,1,0,0,0,568,569,5,91,0,0,569,110,1,0,0,0,570,
		571,5,93,0,0,571,112,1,0,0,0,572,573,5,40,0,0,573,114,1,0,0,0,574,575,
		5,41,0,0,575,116,1,0,0,0,576,577,5,46,0,0,577,578,5,46,0,0,578,118,1,0,
		0,0,579,580,5,46,0,0,580,120,1,0,0,0,581,582,5,44,0,0,582,122,1,0,0,0,
		583,584,5,58,0,0,584,124,1,0,0,0,585,586,5,43,0,0,586,126,1,0,0,0,587,
		588,5,45,0,0,588,128,1,0,0,0,589,590,5,42,0,0,590,130,1,0,0,0,591,592,
		5,47,0,0,592,132,1,0,0,0,593,594,5,94,0,0,594,134,1,0,0,0,595,596,5,109,
		0,0,596,597,5,111,0,0,597,598,5,100,0,0,598,136,1,0,0,0,599,600,5,100,
		0,0,600,601,5,105,0,0,601,602,5,118,0,0,602,138,1,0,0,0,603,604,5,60,0,
		0,604,140,1,0,0,0,605,606,5,62,0,0,606,142,1,0,0,0,607,608,5,97,0,0,608,
		609,5,110,0,0,609,610,5,100,0,0,610,144,1,0,0,0,611,612,5,110,0,0,612,
		613,5,111,0,0,613,614,5,116,0,0,614,146,1,0,0,0,615,616,5,111,0,0,616,
		617,5,114,0,0,617,148,1,0,0,0,618,619,5,120,0,0,619,620,5,111,0,0,620,
		621,5,114,0,0,621,150,1,0,0,0,622,623,5,105,0,0,623,624,5,115,0,0,624,
		152,1,0,0,0,625,626,5,60,0,0,626,640,5,62,0,0,627,628,5,105,0,0,628,629,
		5,115,0,0,629,633,1,0,0,0,630,632,3,187,93,0,631,630,1,0,0,0,632,635,1,
		0,0,0,633,631,1,0,0,0,633,634,1,0,0,0,634,636,1,0,0,0,635,633,1,0,0,0,
		636,637,5,110,0,0,637,638,5,111,0,0,638,640,5,116,0,0,639,625,1,0,0,0,
		639,627,1,0,0,0,640,154,1,0,0,0,641,642,5,60,0,0,642,643,5,61,0,0,643,
		156,1,0,0,0,644,645,5,62,0,0,645,646,5,61,0,0,646,158,1,0,0,0,647,648,
		3,195,97,0,648,160,1,0,0,0,649,650,3,193,96,0,650,162,1,0,0,0,651,655,
		7,1,0,0,652,654,7,1,0,0,653,652,1,0,0,0,654,657,1,0,0,0,655,653,1,0,0,
		0,655,656,1,0,0,0,656,164,1,0,0,0,657,655,1,0,0,0,658,659,3,163,81,0,659,
		660,3,119,59,0,660,662,3,163,81,0,661,663,3,177,88,0,662,661,1,0,0,0,662,
		663,1,0,0,0,663,166,1,0,0,0,664,667,5,39,0,0,665,668,8,2,0,0,666,668,3,
		179,89,0,667,665,1,0,0,0,667,666,1,0,0,0,668,669,1,0,0,0,669,670,5,39,
		0,0,670,168,1,0,0,0,671,676,5,34,0,0,672,675,8,3,0,0,673,675,3,179,89,
		0,674,672,1,0,0,0,674,673,1,0,0,0,675,678,1,0,0,0,676,674,1,0,0,0,676,
		677,1,0,0,0,677,679,1,0,0,0,678,676,1,0,0,0,679,680,5,34,0,0,680,170,1,
		0,0,0,681,683,3,187,93,0,682,681,1,0,0,0,683,684,1,0,0,0,684,682,1,0,0,
		0,684,685,1,0,0,0,685,686,1,0,0,0,686,687,6,85,0,0,687,172,1,0,0,0,688,
		689,8,4,0,0,689,174,1,0,0,0,690,691,7,4,0,0,691,176,1,0,0,0,692,695,7,
		5,0,0,693,696,3,125,62,0,694,696,3,127,63,0,695,693,1,0,0,0,695,694,1,
		0,0,0,695,696,1,0,0,0,696,697,1,0,0,0,697,698,3,163,81,0,698,178,1,0,0,
		0,699,703,3,181,90,0,700,703,3,183,91,0,701,703,3,207,103,0,702,699,1,
		0,0,0,702,700,1,0,0,0,702,701,1,0,0,0,703,180,1,0,0,0,704,705,5,92,0,0,
		705,727,5,39,0,0,706,707,5,92,0,0,707,727,5,34,0,0,708,709,5,92,0,0,709,
		727,5,92,0,0,710,711,5,92,0,0,711,727,5,48,0,0,712,713,5,92,0,0,713,727,
		5,97,0,0,714,715,5,92,0,0,715,727,5,98,0,0,716,717,5,92,0,0,717,727,5,
		102,0,0,718,719,5,92,0,0,719,727,5,110,0,0,720,721,5,92,0,0,721,727,5,
		114,0,0,722,723,5,92,0,0,723,727,5,116,0,0,724,725,5,92,0,0,725,727,5,
		118,0,0,726,704,1,0,0,0,726,706,1,0,0,0,726,708,1,0,0,0,726,710,1,0,0,
		0,726,712,1,0,0,0,726,714,1,0,0,0,726,716,1,0,0,0,726,718,1,0,0,0,726,
		720,1,0,0,0,726,722,1,0,0,0,726,724,1,0,0,0,727,182,1,0,0,0,728,729,5,
		92,0,0,729,730,5,120,0,0,730,731,1,0,0,0,731,754,3,209,104,0,732,733,5,
		92,0,0,733,734,5,120,0,0,734,735,1,0,0,0,735,736,3,209,104,0,736,737,3,
		209,104,0,737,754,1,0,0,0,738,739,5,92,0,0,739,740,5,120,0,0,740,741,1,
		0,0,0,741,742,3,209,104,0,742,743,3,209,104,0,743,744,3,209,104,0,744,
		754,1,0,0,0,745,746,5,92,0,0,746,747,5,120,0,0,747,748,1,0,0,0,748,749,
		3,209,104,0,749,750,3,209,104,0,750,751,3,209,104,0,751,752,3,209,104,
		0,752,754,1,0,0,0,753,728,1,0,0,0,753,732,1,0,0,0,753,738,1,0,0,0,753,
		745,1,0,0,0,754,184,1,0,0,0,755,756,5,13,0,0,756,759,5,10,0,0,757,759,
		7,4,0,0,758,755,1,0,0,0,758,757,1,0,0,0,759,186,1,0,0,0,760,763,3,189,
		94,0,761,763,7,6,0,0,762,760,1,0,0,0,762,761,1,0,0,0,763,188,1,0,0,0,764,
		765,7,7,0,0,765,190,1,0,0,0,766,769,3,213,106,0,767,769,3,211,105,0,768,
		766,1,0,0,0,768,767,1,0,0,0,769,773,1,0,0,0,770,772,3,197,98,0,771,770,
		1,0,0,0,772,775,1,0,0,0,773,771,1,0,0,0,773,774,1,0,0,0,774,192,1,0,0,
		0,775,773,1,0,0,0,776,780,3,213,106,0,777,779,3,197,98,0,778,777,1,0,0,
		0,779,782,1,0,0,0,780,778,1,0,0,0,780,781,1,0,0,0,781,194,1,0,0,0,782,
		780,1,0,0,0,783,787,3,211,105,0,784,786,3,197,98,0,785,784,1,0,0,0,786,
		789,1,0,0,0,787,785,1,0,0,0,787,788,1,0,0,0,788,196,1,0,0,0,789,787,1,
		0,0,0,790,795,3,211,105,0,791,795,3,213,106,0,792,795,3,201,100,0,793,
		795,5,95,0,0,794,790,1,0,0,0,794,791,1,0,0,0,794,792,1,0,0,0,794,793,1,
		0,0,0,795,198,1,0,0,0,796,800,3,211,105,0,797,800,3,213,106,0,798,800,
		3,207,103,0,799,796,1,0,0,0,799,797,1,0,0,0,799,798,1,0,0,0,800,200,1,
		0,0,0,801,804,3,215,107,0,802,804,3,207,103,0,803,801,1,0,0,0,803,802,
		1,0,0,0,804,202,1,0,0,0,805,806,3,207,103,0,806,204,1,0,0,0,807,808,3,
		207,103,0,808,206,1,0,0,0,809,810,5,92,0,0,810,811,5,117,0,0,811,812,1,
		0,0,0,812,813,3,209,104,0,813,814,3,209,104,0,814,815,3,209,104,0,815,
		816,3,209,104,0,816,830,1,0,0,0,817,818,5,92,0,0,818,819,5,85,0,0,819,
		820,1,0,0,0,820,821,3,209,104,0,821,822,3,209,104,0,822,823,3,209,104,
		0,823,824,3,209,104,0,824,825,3,209,104,0,825,826,3,209,104,0,826,827,
		3,209,104,0,827,828,3,209,104,0,828,830,1,0,0,0,829,809,1,0,0,0,829,817,
		1,0,0,0,830,208,1,0,0,0,831,833,7,8,0,0,832,831,1,0,0,0,833,210,1,0,0,
		0,834,835,2,65,90,0,835,212,1,0,0,0,836,837,2,97,122,0,837,214,1,0,0,0,
		838,839,2,48,57,0,839,216,1,0,0,0,840,842,5,13,0,0,841,840,1,0,0,0,841,
		842,1,0,0,0,842,843,1,0,0,0,843,846,5,10,0,0,844,846,5,13,0,0,845,841,
		1,0,0,0,845,844,1,0,0,0,846,218,1,0,0,0,847,849,7,9,0,0,848,847,1,0,0,
		0,849,850,1,0,0,0,850,848,1,0,0,0,850,851,1,0,0,0,851,852,1,0,0,0,852,
		853,6,109,0,0,853,220,1,0,0,0,32,0,224,227,233,506,530,633,639,655,662,
		667,674,676,684,695,702,726,753,758,762,768,773,780,787,794,799,803,829,
		832,841,845,850,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
