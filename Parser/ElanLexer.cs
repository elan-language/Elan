//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c://Elan//Repository//Parser//Elan.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class ElanLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		NL=1, SINGLE_LINE_COMMENT=2, COMMENT_MARKER=3, ABSTRACT=4, CALL=5, CASE=6, 
		CATCH=7, CLASS=8, CONSTANT=9, CONSTRUCTOR=10, CURRY=11, DEFAULT=12, ELSE=13, 
		END=14, ENUM=15, FOR=16, FOREACH=17, FUNCTION=18, GLOBAL=19, IF=20, IMMUTABLE=21, 
		IN=22, INHERITS=23, LAMBDA=24, LET=25, MAIN=26, PARTIAL=27, PRINT=28, 
		PRIVATE=29, PROCEDURE=30, PROPERTY=31, REPEAT=32, RETURN=33, SELF=34, 
		SET=35, STEP=36, SWITCH=37, TEST=38, THEN=39, THROW=40, TO=41, TRY=42, 
		UNTIL=43, VAR=44, WHILE=45, WITH=46, BOOL_VALUE=47, VALUE_TYPE=48, ARRAY=49, 
		LIST=50, DICTIONARY=51, ITERABLE=52, ASSIGN=53, ARROW=54, OPEN_BRACE=55, 
		CLOSE_BRACE=56, OPEN_SQ_BRACKET=57, CLOSE_SQ_BRACKET=58, OPEN_BRACKET=59, 
		CLOSE_BRACKET=60, DOUBLE_DOT=61, DOT=62, COMMA=63, COLON=64, PLUS=65, 
		MINUS=66, MULT=67, DIVIDE=68, POWER=69, MOD=70, INT_DIV=71, LT=72, GT=73, 
		OP_AND=74, OP_NOT=75, OP_OR=76, OP_XOR=77, OP_EQ=78, OP_NE=79, OP_LE=80, 
		OP_GE=81, TYPENAME=82, IDENTIFIER=83, LITERAL_INTEGER=84, LITERAL_FLOAT=85, 
		LITERAL_CHAR=86, LITERAL_STRING=87, WHITESPACES=88, NEWLINE=89, WS=90;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"NL", "SINGLE_LINE_COMMENT", "COMMENT_MARKER", "ABSTRACT", "CALL", "CASE", 
		"CATCH", "CLASS", "CONSTANT", "CONSTRUCTOR", "CURRY", "DEFAULT", "ELSE", 
		"END", "ENUM", "FOR", "FOREACH", "FUNCTION", "GLOBAL", "IF", "IMMUTABLE", 
		"IN", "INHERITS", "LAMBDA", "LET", "MAIN", "PARTIAL", "PRINT", "PRIVATE", 
		"PROCEDURE", "PROPERTY", "REPEAT", "RETURN", "SELF", "SET", "STEP", "SWITCH", 
		"TEST", "THEN", "THROW", "TO", "TRY", "UNTIL", "VAR", "WHILE", "WITH", 
		"BOOL_VALUE", "VALUE_TYPE", "ARRAY", "LIST", "DICTIONARY", "ITERABLE", 
		"ASSIGN", "ARROW", "OPEN_BRACE", "CLOSE_BRACE", "OPEN_SQ_BRACKET", "CLOSE_SQ_BRACKET", 
		"OPEN_BRACKET", "CLOSE_BRACKET", "DOUBLE_DOT", "DOT", "COMMA", "COLON", 
		"PLUS", "MINUS", "MULT", "DIVIDE", "POWER", "MOD", "INT_DIV", "LT", "GT", 
		"OP_AND", "OP_NOT", "OP_OR", "OP_XOR", "OP_EQ", "OP_NE", "OP_LE", "OP_GE", 
		"TYPENAME", "IDENTIFIER", "LITERAL_INTEGER", "LITERAL_FLOAT", "LITERAL_CHAR", 
		"LITERAL_STRING", "WHITESPACES", "InputCharacter", "NewLineCharacter", 
		"ExponentPart", "CommonCharacter", "SimpleEscapeSequence", "HexEscapeSequence", 
		"NewLine", "Whitespace", "UnicodeClassZS", "IdentifierStartingUCorLC", 
		"IdentifierStartingLC", "IdentifierStartingUC", "IdentifierPartCharacter", 
		"LetterCharacter", "DecimalDigitCharacter", "ConnectingCharacter", "FormattingCharacter", 
		"UnicodeEscapeSequence", "HexDigit", "UnicodeClassLU", "UnicodeClassLL", 
		"UnicodeClassND", "NEWLINE", "WS"
	};


	public ElanLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ElanLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, "'#'", "'abstract'", "'call'", "'case'", "'catch'", 
		"'class'", "'constant'", "'constructor'", "'curry'", "'default'", "'else'", 
		"'end'", "'enum'", "'for'", "'foreach'", "'function'", "'global'", "'if'", 
		"'immutable'", "'in'", "'inherits'", "'lambda'", "'let'", "'main'", "'partial'", 
		"'print'", "'private'", "'procedure'", "'property'", "'repeat'", "'return'", 
		"'self'", "'set'", "'step'", "'switch'", "'test'", "'then'", "'throw'", 
		"'to'", "'try'", "'until'", "'var'", "'while'", "'with'", null, null, 
		"'Array'", "'List'", "'Dictionary'", "'Iter'", "'='", "'->'", "'{'", "'}'", 
		"'['", "']'", "'('", "')'", "'..'", "'.'", "','", "':'", "'+'", "'-'", 
		"'*'", "'/'", "'^'", "'mod'", "'div'", "'<'", "'>'", "'and'", "'not'", 
		"'or'", "'xor'", "'is'", null, "'<='", "'>='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "NL", "SINGLE_LINE_COMMENT", "COMMENT_MARKER", "ABSTRACT", "CALL", 
		"CASE", "CATCH", "CLASS", "CONSTANT", "CONSTRUCTOR", "CURRY", "DEFAULT", 
		"ELSE", "END", "ENUM", "FOR", "FOREACH", "FUNCTION", "GLOBAL", "IF", "IMMUTABLE", 
		"IN", "INHERITS", "LAMBDA", "LET", "MAIN", "PARTIAL", "PRINT", "PRIVATE", 
		"PROCEDURE", "PROPERTY", "REPEAT", "RETURN", "SELF", "SET", "STEP", "SWITCH", 
		"TEST", "THEN", "THROW", "TO", "TRY", "UNTIL", "VAR", "WHILE", "WITH", 
		"BOOL_VALUE", "VALUE_TYPE", "ARRAY", "LIST", "DICTIONARY", "ITERABLE", 
		"ASSIGN", "ARROW", "OPEN_BRACE", "CLOSE_BRACE", "OPEN_SQ_BRACKET", "CLOSE_SQ_BRACKET", 
		"OPEN_BRACKET", "CLOSE_BRACKET", "DOUBLE_DOT", "DOT", "COMMA", "COLON", 
		"PLUS", "MINUS", "MULT", "DIVIDE", "POWER", "MOD", "INT_DIV", "LT", "GT", 
		"OP_AND", "OP_NOT", "OP_OR", "OP_XOR", "OP_EQ", "OP_NE", "OP_LE", "OP_GE", 
		"TYPENAME", "IDENTIFIER", "LITERAL_INTEGER", "LITERAL_FLOAT", "LITERAL_CHAR", 
		"LITERAL_STRING", "WHITESPACES", "NEWLINE", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Elan.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static ElanLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,90,867,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
		7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,
		7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,
		7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,
		104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,
		7,110,2,111,7,111,1,0,4,0,227,8,0,11,0,12,0,228,1,1,3,1,232,8,1,1,1,1,
		1,5,1,236,8,1,10,1,12,1,239,9,1,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,
		3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,
		1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
		9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,
		1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,
		1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,16,
		1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,
		1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,20,1,20,
		1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,22,
		1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,
		1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,
		1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,
		1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,
		1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,
		1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,34,1,34,
		1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,
		1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,
		1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,
		1,42,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,
		1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,3,46,523,8,46,1,
		47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,
		47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,3,47,547,8,47,1,48,1,48,1,48,1,48,
		1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,
		1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,53,1,53,1,53,
		1,54,1,54,1,55,1,55,1,56,1,56,1,57,1,57,1,58,1,58,1,59,1,59,1,60,1,60,
		1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,65,1,65,1,66,1,66,1,67,
		1,67,1,68,1,68,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,71,1,71,1,72,
		1,72,1,73,1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,75,1,75,1,75,1,76,1,76,
		1,76,1,76,1,77,1,77,1,77,1,78,1,78,1,78,1,78,5,78,646,8,78,10,78,12,78,
		649,9,78,1,78,1,78,1,78,1,78,1,79,1,79,1,79,1,80,1,80,1,80,1,81,1,81,1,
		82,1,82,1,83,1,83,5,83,667,8,83,10,83,12,83,670,9,83,1,84,1,84,1,84,1,
		84,3,84,676,8,84,1,85,1,85,1,85,3,85,681,8,85,1,85,1,85,1,86,1,86,1,86,
		5,86,688,8,86,10,86,12,86,691,9,86,1,86,1,86,1,87,4,87,696,8,87,11,87,
		12,87,697,1,87,1,87,1,88,1,88,1,89,1,89,1,90,1,90,1,90,3,90,709,8,90,1,
		90,1,90,1,91,1,91,1,91,3,91,716,8,91,1,92,1,92,1,92,1,92,1,92,1,92,1,92,
		1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,
		1,92,3,92,740,8,92,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,
		93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,
		93,3,93,767,8,93,1,94,1,94,1,94,3,94,772,8,94,1,95,1,95,3,95,776,8,95,
		1,96,1,96,1,97,1,97,3,97,782,8,97,1,97,5,97,785,8,97,10,97,12,97,788,9,
		97,1,98,1,98,5,98,792,8,98,10,98,12,98,795,9,98,1,99,1,99,5,99,799,8,99,
		10,99,12,99,802,9,99,1,100,1,100,1,100,1,100,3,100,808,8,100,1,101,1,101,
		1,101,3,101,813,8,101,1,102,1,102,3,102,817,8,102,1,103,1,103,1,104,1,
		104,1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,105,
		1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,105,3,105,843,8,105,
		1,106,3,106,846,8,106,1,107,1,107,1,108,1,108,1,109,1,109,1,110,3,110,
		855,8,110,1,110,1,110,3,110,859,8,110,1,111,4,111,862,8,111,11,111,12,
		111,863,1,111,1,111,0,0,112,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,
		10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,
		22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,
		34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,
		46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,
		57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,
		67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,
		77,155,78,157,79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,173,
		87,175,88,177,0,179,0,181,0,183,0,185,0,187,0,189,0,191,0,193,0,195,0,
		197,0,199,0,201,0,203,0,205,0,207,0,209,0,211,0,213,0,215,0,217,0,219,
		0,221,89,223,90,1,0,10,2,0,10,10,12,13,1,0,48,57,5,0,10,10,13,13,39,39,
		92,92,133,133,2,0,34,34,133,133,3,0,10,10,13,13,133,133,2,0,69,69,101,
		101,2,0,9,9,11,12,2,0,32,32,160,160,3,0,48,57,65,70,97,102,2,0,9,9,32,
		32,892,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
		1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,
		0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
		1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,
		0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,
		1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,
		0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,
		1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,
		0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,
		1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,
		1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,
		1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,
		1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,
		1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,
		1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,
		1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,
		1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,221,1,0,0,0,0,223,
		1,0,0,0,1,226,1,0,0,0,3,231,1,0,0,0,5,242,1,0,0,0,7,244,1,0,0,0,9,253,
		1,0,0,0,11,258,1,0,0,0,13,263,1,0,0,0,15,269,1,0,0,0,17,275,1,0,0,0,19,
		284,1,0,0,0,21,296,1,0,0,0,23,302,1,0,0,0,25,310,1,0,0,0,27,315,1,0,0,
		0,29,319,1,0,0,0,31,324,1,0,0,0,33,328,1,0,0,0,35,336,1,0,0,0,37,345,1,
		0,0,0,39,352,1,0,0,0,41,355,1,0,0,0,43,365,1,0,0,0,45,368,1,0,0,0,47,377,
		1,0,0,0,49,384,1,0,0,0,51,388,1,0,0,0,53,393,1,0,0,0,55,401,1,0,0,0,57,
		407,1,0,0,0,59,415,1,0,0,0,61,425,1,0,0,0,63,434,1,0,0,0,65,441,1,0,0,
		0,67,448,1,0,0,0,69,453,1,0,0,0,71,457,1,0,0,0,73,462,1,0,0,0,75,469,1,
		0,0,0,77,474,1,0,0,0,79,479,1,0,0,0,81,485,1,0,0,0,83,488,1,0,0,0,85,492,
		1,0,0,0,87,498,1,0,0,0,89,502,1,0,0,0,91,508,1,0,0,0,93,522,1,0,0,0,95,
		546,1,0,0,0,97,548,1,0,0,0,99,554,1,0,0,0,101,559,1,0,0,0,103,570,1,0,
		0,0,105,575,1,0,0,0,107,577,1,0,0,0,109,580,1,0,0,0,111,582,1,0,0,0,113,
		584,1,0,0,0,115,586,1,0,0,0,117,588,1,0,0,0,119,590,1,0,0,0,121,592,1,
		0,0,0,123,595,1,0,0,0,125,597,1,0,0,0,127,599,1,0,0,0,129,601,1,0,0,0,
		131,603,1,0,0,0,133,605,1,0,0,0,135,607,1,0,0,0,137,609,1,0,0,0,139,611,
		1,0,0,0,141,615,1,0,0,0,143,619,1,0,0,0,145,621,1,0,0,0,147,623,1,0,0,
		0,149,627,1,0,0,0,151,631,1,0,0,0,153,634,1,0,0,0,155,638,1,0,0,0,157,
		641,1,0,0,0,159,654,1,0,0,0,161,657,1,0,0,0,163,660,1,0,0,0,165,662,1,
		0,0,0,167,664,1,0,0,0,169,671,1,0,0,0,171,677,1,0,0,0,173,684,1,0,0,0,
		175,695,1,0,0,0,177,701,1,0,0,0,179,703,1,0,0,0,181,705,1,0,0,0,183,715,
		1,0,0,0,185,739,1,0,0,0,187,766,1,0,0,0,189,771,1,0,0,0,191,775,1,0,0,
		0,193,777,1,0,0,0,195,781,1,0,0,0,197,789,1,0,0,0,199,796,1,0,0,0,201,
		807,1,0,0,0,203,812,1,0,0,0,205,816,1,0,0,0,207,818,1,0,0,0,209,820,1,
		0,0,0,211,842,1,0,0,0,213,845,1,0,0,0,215,847,1,0,0,0,217,849,1,0,0,0,
		219,851,1,0,0,0,221,858,1,0,0,0,223,861,1,0,0,0,225,227,7,0,0,0,226,225,
		1,0,0,0,227,228,1,0,0,0,228,226,1,0,0,0,228,229,1,0,0,0,229,2,1,0,0,0,
		230,232,3,1,0,0,231,230,1,0,0,0,231,232,1,0,0,0,232,233,1,0,0,0,233,237,
		3,5,2,0,234,236,3,177,88,0,235,234,1,0,0,0,236,239,1,0,0,0,237,235,1,0,
		0,0,237,238,1,0,0,0,238,240,1,0,0,0,239,237,1,0,0,0,240,241,6,1,0,0,241,
		4,1,0,0,0,242,243,5,35,0,0,243,6,1,0,0,0,244,245,5,97,0,0,245,246,5,98,
		0,0,246,247,5,115,0,0,247,248,5,116,0,0,248,249,5,114,0,0,249,250,5,97,
		0,0,250,251,5,99,0,0,251,252,5,116,0,0,252,8,1,0,0,0,253,254,5,99,0,0,
		254,255,5,97,0,0,255,256,5,108,0,0,256,257,5,108,0,0,257,10,1,0,0,0,258,
		259,5,99,0,0,259,260,5,97,0,0,260,261,5,115,0,0,261,262,5,101,0,0,262,
		12,1,0,0,0,263,264,5,99,0,0,264,265,5,97,0,0,265,266,5,116,0,0,266,267,
		5,99,0,0,267,268,5,104,0,0,268,14,1,0,0,0,269,270,5,99,0,0,270,271,5,108,
		0,0,271,272,5,97,0,0,272,273,5,115,0,0,273,274,5,115,0,0,274,16,1,0,0,
		0,275,276,5,99,0,0,276,277,5,111,0,0,277,278,5,110,0,0,278,279,5,115,0,
		0,279,280,5,116,0,0,280,281,5,97,0,0,281,282,5,110,0,0,282,283,5,116,0,
		0,283,18,1,0,0,0,284,285,5,99,0,0,285,286,5,111,0,0,286,287,5,110,0,0,
		287,288,5,115,0,0,288,289,5,116,0,0,289,290,5,114,0,0,290,291,5,117,0,
		0,291,292,5,99,0,0,292,293,5,116,0,0,293,294,5,111,0,0,294,295,5,114,0,
		0,295,20,1,0,0,0,296,297,5,99,0,0,297,298,5,117,0,0,298,299,5,114,0,0,
		299,300,5,114,0,0,300,301,5,121,0,0,301,22,1,0,0,0,302,303,5,100,0,0,303,
		304,5,101,0,0,304,305,5,102,0,0,305,306,5,97,0,0,306,307,5,117,0,0,307,
		308,5,108,0,0,308,309,5,116,0,0,309,24,1,0,0,0,310,311,5,101,0,0,311,312,
		5,108,0,0,312,313,5,115,0,0,313,314,5,101,0,0,314,26,1,0,0,0,315,316,5,
		101,0,0,316,317,5,110,0,0,317,318,5,100,0,0,318,28,1,0,0,0,319,320,5,101,
		0,0,320,321,5,110,0,0,321,322,5,117,0,0,322,323,5,109,0,0,323,30,1,0,0,
		0,324,325,5,102,0,0,325,326,5,111,0,0,326,327,5,114,0,0,327,32,1,0,0,0,
		328,329,5,102,0,0,329,330,5,111,0,0,330,331,5,114,0,0,331,332,5,101,0,
		0,332,333,5,97,0,0,333,334,5,99,0,0,334,335,5,104,0,0,335,34,1,0,0,0,336,
		337,5,102,0,0,337,338,5,117,0,0,338,339,5,110,0,0,339,340,5,99,0,0,340,
		341,5,116,0,0,341,342,5,105,0,0,342,343,5,111,0,0,343,344,5,110,0,0,344,
		36,1,0,0,0,345,346,5,103,0,0,346,347,5,108,0,0,347,348,5,111,0,0,348,349,
		5,98,0,0,349,350,5,97,0,0,350,351,5,108,0,0,351,38,1,0,0,0,352,353,5,105,
		0,0,353,354,5,102,0,0,354,40,1,0,0,0,355,356,5,105,0,0,356,357,5,109,0,
		0,357,358,5,109,0,0,358,359,5,117,0,0,359,360,5,116,0,0,360,361,5,97,0,
		0,361,362,5,98,0,0,362,363,5,108,0,0,363,364,5,101,0,0,364,42,1,0,0,0,
		365,366,5,105,0,0,366,367,5,110,0,0,367,44,1,0,0,0,368,369,5,105,0,0,369,
		370,5,110,0,0,370,371,5,104,0,0,371,372,5,101,0,0,372,373,5,114,0,0,373,
		374,5,105,0,0,374,375,5,116,0,0,375,376,5,115,0,0,376,46,1,0,0,0,377,378,
		5,108,0,0,378,379,5,97,0,0,379,380,5,109,0,0,380,381,5,98,0,0,381,382,
		5,100,0,0,382,383,5,97,0,0,383,48,1,0,0,0,384,385,5,108,0,0,385,386,5,
		101,0,0,386,387,5,116,0,0,387,50,1,0,0,0,388,389,5,109,0,0,389,390,5,97,
		0,0,390,391,5,105,0,0,391,392,5,110,0,0,392,52,1,0,0,0,393,394,5,112,0,
		0,394,395,5,97,0,0,395,396,5,114,0,0,396,397,5,116,0,0,397,398,5,105,0,
		0,398,399,5,97,0,0,399,400,5,108,0,0,400,54,1,0,0,0,401,402,5,112,0,0,
		402,403,5,114,0,0,403,404,5,105,0,0,404,405,5,110,0,0,405,406,5,116,0,
		0,406,56,1,0,0,0,407,408,5,112,0,0,408,409,5,114,0,0,409,410,5,105,0,0,
		410,411,5,118,0,0,411,412,5,97,0,0,412,413,5,116,0,0,413,414,5,101,0,0,
		414,58,1,0,0,0,415,416,5,112,0,0,416,417,5,114,0,0,417,418,5,111,0,0,418,
		419,5,99,0,0,419,420,5,101,0,0,420,421,5,100,0,0,421,422,5,117,0,0,422,
		423,5,114,0,0,423,424,5,101,0,0,424,60,1,0,0,0,425,426,5,112,0,0,426,427,
		5,114,0,0,427,428,5,111,0,0,428,429,5,112,0,0,429,430,5,101,0,0,430,431,
		5,114,0,0,431,432,5,116,0,0,432,433,5,121,0,0,433,62,1,0,0,0,434,435,5,
		114,0,0,435,436,5,101,0,0,436,437,5,112,0,0,437,438,5,101,0,0,438,439,
		5,97,0,0,439,440,5,116,0,0,440,64,1,0,0,0,441,442,5,114,0,0,442,443,5,
		101,0,0,443,444,5,116,0,0,444,445,5,117,0,0,445,446,5,114,0,0,446,447,
		5,110,0,0,447,66,1,0,0,0,448,449,5,115,0,0,449,450,5,101,0,0,450,451,5,
		108,0,0,451,452,5,102,0,0,452,68,1,0,0,0,453,454,5,115,0,0,454,455,5,101,
		0,0,455,456,5,116,0,0,456,70,1,0,0,0,457,458,5,115,0,0,458,459,5,116,0,
		0,459,460,5,101,0,0,460,461,5,112,0,0,461,72,1,0,0,0,462,463,5,115,0,0,
		463,464,5,119,0,0,464,465,5,105,0,0,465,466,5,116,0,0,466,467,5,99,0,0,
		467,468,5,104,0,0,468,74,1,0,0,0,469,470,5,116,0,0,470,471,5,101,0,0,471,
		472,5,115,0,0,472,473,5,116,0,0,473,76,1,0,0,0,474,475,5,116,0,0,475,476,
		5,104,0,0,476,477,5,101,0,0,477,478,5,110,0,0,478,78,1,0,0,0,479,480,5,
		116,0,0,480,481,5,104,0,0,481,482,5,114,0,0,482,483,5,111,0,0,483,484,
		5,119,0,0,484,80,1,0,0,0,485,486,5,116,0,0,486,487,5,111,0,0,487,82,1,
		0,0,0,488,489,5,116,0,0,489,490,5,114,0,0,490,491,5,121,0,0,491,84,1,0,
		0,0,492,493,5,117,0,0,493,494,5,110,0,0,494,495,5,116,0,0,495,496,5,105,
		0,0,496,497,5,108,0,0,497,86,1,0,0,0,498,499,5,118,0,0,499,500,5,97,0,
		0,500,501,5,114,0,0,501,88,1,0,0,0,502,503,5,119,0,0,503,504,5,104,0,0,
		504,505,5,105,0,0,505,506,5,108,0,0,506,507,5,101,0,0,507,90,1,0,0,0,508,
		509,5,119,0,0,509,510,5,105,0,0,510,511,5,116,0,0,511,512,5,104,0,0,512,
		92,1,0,0,0,513,514,5,116,0,0,514,515,5,114,0,0,515,516,5,117,0,0,516,523,
		5,101,0,0,517,518,5,102,0,0,518,519,5,97,0,0,519,520,5,108,0,0,520,521,
		5,115,0,0,521,523,5,101,0,0,522,513,1,0,0,0,522,517,1,0,0,0,523,94,1,0,
		0,0,524,525,5,73,0,0,525,526,5,110,0,0,526,547,5,116,0,0,527,528,5,70,
		0,0,528,529,5,108,0,0,529,530,5,111,0,0,530,531,5,97,0,0,531,547,5,116,
		0,0,532,533,5,67,0,0,533,534,5,104,0,0,534,535,5,97,0,0,535,547,5,114,
		0,0,536,537,5,83,0,0,537,538,5,116,0,0,538,539,5,114,0,0,539,540,5,105,
		0,0,540,541,5,110,0,0,541,547,5,103,0,0,542,543,5,66,0,0,543,544,5,111,
		0,0,544,545,5,111,0,0,545,547,5,108,0,0,546,524,1,0,0,0,546,527,1,0,0,
		0,546,532,1,0,0,0,546,536,1,0,0,0,546,542,1,0,0,0,547,96,1,0,0,0,548,549,
		5,65,0,0,549,550,5,114,0,0,550,551,5,114,0,0,551,552,5,97,0,0,552,553,
		5,121,0,0,553,98,1,0,0,0,554,555,5,76,0,0,555,556,5,105,0,0,556,557,5,
		115,0,0,557,558,5,116,0,0,558,100,1,0,0,0,559,560,5,68,0,0,560,561,5,105,
		0,0,561,562,5,99,0,0,562,563,5,116,0,0,563,564,5,105,0,0,564,565,5,111,
		0,0,565,566,5,110,0,0,566,567,5,97,0,0,567,568,5,114,0,0,568,569,5,121,
		0,0,569,102,1,0,0,0,570,571,5,73,0,0,571,572,5,116,0,0,572,573,5,101,0,
		0,573,574,5,114,0,0,574,104,1,0,0,0,575,576,5,61,0,0,576,106,1,0,0,0,577,
		578,5,45,0,0,578,579,5,62,0,0,579,108,1,0,0,0,580,581,5,123,0,0,581,110,
		1,0,0,0,582,583,5,125,0,0,583,112,1,0,0,0,584,585,5,91,0,0,585,114,1,0,
		0,0,586,587,5,93,0,0,587,116,1,0,0,0,588,589,5,40,0,0,589,118,1,0,0,0,
		590,591,5,41,0,0,591,120,1,0,0,0,592,593,5,46,0,0,593,594,5,46,0,0,594,
		122,1,0,0,0,595,596,5,46,0,0,596,124,1,0,0,0,597,598,5,44,0,0,598,126,
		1,0,0,0,599,600,5,58,0,0,600,128,1,0,0,0,601,602,5,43,0,0,602,130,1,0,
		0,0,603,604,5,45,0,0,604,132,1,0,0,0,605,606,5,42,0,0,606,134,1,0,0,0,
		607,608,5,47,0,0,608,136,1,0,0,0,609,610,5,94,0,0,610,138,1,0,0,0,611,
		612,5,109,0,0,612,613,5,111,0,0,613,614,5,100,0,0,614,140,1,0,0,0,615,
		616,5,100,0,0,616,617,5,105,0,0,617,618,5,118,0,0,618,142,1,0,0,0,619,
		620,5,60,0,0,620,144,1,0,0,0,621,622,5,62,0,0,622,146,1,0,0,0,623,624,
		5,97,0,0,624,625,5,110,0,0,625,626,5,100,0,0,626,148,1,0,0,0,627,628,5,
		110,0,0,628,629,5,111,0,0,629,630,5,116,0,0,630,150,1,0,0,0,631,632,5,
		111,0,0,632,633,5,114,0,0,633,152,1,0,0,0,634,635,5,120,0,0,635,636,5,
		111,0,0,636,637,5,114,0,0,637,154,1,0,0,0,638,639,5,105,0,0,639,640,5,
		115,0,0,640,156,1,0,0,0,641,642,5,105,0,0,642,643,5,115,0,0,643,647,1,
		0,0,0,644,646,3,191,95,0,645,644,1,0,0,0,646,649,1,0,0,0,647,645,1,0,0,
		0,647,648,1,0,0,0,648,650,1,0,0,0,649,647,1,0,0,0,650,651,5,110,0,0,651,
		652,5,111,0,0,652,653,5,116,0,0,653,158,1,0,0,0,654,655,5,60,0,0,655,656,
		5,61,0,0,656,160,1,0,0,0,657,658,5,62,0,0,658,659,5,61,0,0,659,162,1,0,
		0,0,660,661,3,199,99,0,661,164,1,0,0,0,662,663,3,197,98,0,663,166,1,0,
		0,0,664,668,7,1,0,0,665,667,7,1,0,0,666,665,1,0,0,0,667,670,1,0,0,0,668,
		666,1,0,0,0,668,669,1,0,0,0,669,168,1,0,0,0,670,668,1,0,0,0,671,672,3,
		167,83,0,672,673,3,123,61,0,673,675,3,167,83,0,674,676,3,181,90,0,675,
		674,1,0,0,0,675,676,1,0,0,0,676,170,1,0,0,0,677,680,5,39,0,0,678,681,8,
		2,0,0,679,681,3,183,91,0,680,678,1,0,0,0,680,679,1,0,0,0,681,682,1,0,0,
		0,682,683,5,39,0,0,683,172,1,0,0,0,684,689,5,34,0,0,685,688,8,3,0,0,686,
		688,3,183,91,0,687,685,1,0,0,0,687,686,1,0,0,0,688,691,1,0,0,0,689,687,
		1,0,0,0,689,690,1,0,0,0,690,692,1,0,0,0,691,689,1,0,0,0,692,693,5,34,0,
		0,693,174,1,0,0,0,694,696,3,191,95,0,695,694,1,0,0,0,696,697,1,0,0,0,697,
		695,1,0,0,0,697,698,1,0,0,0,698,699,1,0,0,0,699,700,6,87,0,0,700,176,1,
		0,0,0,701,702,8,4,0,0,702,178,1,0,0,0,703,704,7,4,0,0,704,180,1,0,0,0,
		705,708,7,5,0,0,706,709,3,129,64,0,707,709,3,131,65,0,708,706,1,0,0,0,
		708,707,1,0,0,0,708,709,1,0,0,0,709,710,1,0,0,0,710,711,3,167,83,0,711,
		182,1,0,0,0,712,716,3,185,92,0,713,716,3,187,93,0,714,716,3,211,105,0,
		715,712,1,0,0,0,715,713,1,0,0,0,715,714,1,0,0,0,716,184,1,0,0,0,717,718,
		5,92,0,0,718,740,5,39,0,0,719,720,5,92,0,0,720,740,5,34,0,0,721,722,5,
		92,0,0,722,740,5,92,0,0,723,724,5,92,0,0,724,740,5,48,0,0,725,726,5,92,
		0,0,726,740,5,97,0,0,727,728,5,92,0,0,728,740,5,98,0,0,729,730,5,92,0,
		0,730,740,5,102,0,0,731,732,5,92,0,0,732,740,5,110,0,0,733,734,5,92,0,
		0,734,740,5,114,0,0,735,736,5,92,0,0,736,740,5,116,0,0,737,738,5,92,0,
		0,738,740,5,118,0,0,739,717,1,0,0,0,739,719,1,0,0,0,739,721,1,0,0,0,739,
		723,1,0,0,0,739,725,1,0,0,0,739,727,1,0,0,0,739,729,1,0,0,0,739,731,1,
		0,0,0,739,733,1,0,0,0,739,735,1,0,0,0,739,737,1,0,0,0,740,186,1,0,0,0,
		741,742,5,92,0,0,742,743,5,120,0,0,743,744,1,0,0,0,744,767,3,213,106,0,
		745,746,5,92,0,0,746,747,5,120,0,0,747,748,1,0,0,0,748,749,3,213,106,0,
		749,750,3,213,106,0,750,767,1,0,0,0,751,752,5,92,0,0,752,753,5,120,0,0,
		753,754,1,0,0,0,754,755,3,213,106,0,755,756,3,213,106,0,756,757,3,213,
		106,0,757,767,1,0,0,0,758,759,5,92,0,0,759,760,5,120,0,0,760,761,1,0,0,
		0,761,762,3,213,106,0,762,763,3,213,106,0,763,764,3,213,106,0,764,765,
		3,213,106,0,765,767,1,0,0,0,766,741,1,0,0,0,766,745,1,0,0,0,766,751,1,
		0,0,0,766,758,1,0,0,0,767,188,1,0,0,0,768,769,5,13,0,0,769,772,5,10,0,
		0,770,772,7,4,0,0,771,768,1,0,0,0,771,770,1,0,0,0,772,190,1,0,0,0,773,
		776,3,193,96,0,774,776,7,6,0,0,775,773,1,0,0,0,775,774,1,0,0,0,776,192,
		1,0,0,0,777,778,7,7,0,0,778,194,1,0,0,0,779,782,3,217,108,0,780,782,3,
		215,107,0,781,779,1,0,0,0,781,780,1,0,0,0,782,786,1,0,0,0,783,785,3,201,
		100,0,784,783,1,0,0,0,785,788,1,0,0,0,786,784,1,0,0,0,786,787,1,0,0,0,
		787,196,1,0,0,0,788,786,1,0,0,0,789,793,3,217,108,0,790,792,3,201,100,
		0,791,790,1,0,0,0,792,795,1,0,0,0,793,791,1,0,0,0,793,794,1,0,0,0,794,
		198,1,0,0,0,795,793,1,0,0,0,796,800,3,215,107,0,797,799,3,201,100,0,798,
		797,1,0,0,0,799,802,1,0,0,0,800,798,1,0,0,0,800,801,1,0,0,0,801,200,1,
		0,0,0,802,800,1,0,0,0,803,808,3,215,107,0,804,808,3,217,108,0,805,808,
		3,205,102,0,806,808,5,95,0,0,807,803,1,0,0,0,807,804,1,0,0,0,807,805,1,
		0,0,0,807,806,1,0,0,0,808,202,1,0,0,0,809,813,3,215,107,0,810,813,3,217,
		108,0,811,813,3,211,105,0,812,809,1,0,0,0,812,810,1,0,0,0,812,811,1,0,
		0,0,813,204,1,0,0,0,814,817,3,219,109,0,815,817,3,211,105,0,816,814,1,
		0,0,0,816,815,1,0,0,0,817,206,1,0,0,0,818,819,3,211,105,0,819,208,1,0,
		0,0,820,821,3,211,105,0,821,210,1,0,0,0,822,823,5,92,0,0,823,824,5,117,
		0,0,824,825,1,0,0,0,825,826,3,213,106,0,826,827,3,213,106,0,827,828,3,
		213,106,0,828,829,3,213,106,0,829,843,1,0,0,0,830,831,5,92,0,0,831,832,
		5,85,0,0,832,833,1,0,0,0,833,834,3,213,106,0,834,835,3,213,106,0,835,836,
		3,213,106,0,836,837,3,213,106,0,837,838,3,213,106,0,838,839,3,213,106,
		0,839,840,3,213,106,0,840,841,3,213,106,0,841,843,1,0,0,0,842,822,1,0,
		0,0,842,830,1,0,0,0,843,212,1,0,0,0,844,846,7,8,0,0,845,844,1,0,0,0,846,
		214,1,0,0,0,847,848,2,65,90,0,848,216,1,0,0,0,849,850,2,97,122,0,850,218,
		1,0,0,0,851,852,2,48,57,0,852,220,1,0,0,0,853,855,5,13,0,0,854,853,1,0,
		0,0,854,855,1,0,0,0,855,856,1,0,0,0,856,859,5,10,0,0,857,859,5,13,0,0,
		858,854,1,0,0,0,858,857,1,0,0,0,859,222,1,0,0,0,860,862,7,9,0,0,861,860,
		1,0,0,0,862,863,1,0,0,0,863,861,1,0,0,0,863,864,1,0,0,0,864,865,1,0,0,
		0,865,866,6,111,0,0,866,224,1,0,0,0,31,0,228,231,237,522,546,647,668,675,
		680,687,689,697,708,715,739,766,771,775,781,786,793,800,807,812,816,842,
		845,854,858,863,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
