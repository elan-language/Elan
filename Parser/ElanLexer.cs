//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c://Elan//Repository//Parser//Elan.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class ElanLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		NL=1, SINGLE_LINE_COMMENT=2, COMMENT_MARKER=3, ABSTRACT=4, AND=5, AS=6, 
		ASSERT=7, CALL=8, CASE=9, CATCH=10, CLASS=11, CONSTANT=12, CONSTRUCTOR=13, 
		CURRY=14, DEFAULT=15, DIV=16, ELSE=17, END=18, ENUM=19, FOR=20, FOREACH=21, 
		FROM=22, FUNCTION=23, GLOBAL=24, IF=25, IMMUTABLE=26, IMPORT=27, IN=28, 
		INHERITS=29, INPUT=30, LAMBDA=31, LET=32, LIBRARY=33, MAIN=34, MOD=35, 
		NEW=36, NOT=37, OF=38, IS=39, OR=40, OUT=41, PACKAGE=42, PARTIAL=43, PRINT=44, 
		PRIVATE=45, PROCEDURE=46, PROPERTY=47, REPEAT=48, RETURN=49, SET=50, STEP=51, 
		SWITCH=52, SYSTEM=53, TEST=54, THEN=55, THIS=56, THROW=57, TO=58, TRY=59, 
		UNTIL=60, VAR=61, WHILE=62, WITH=63, XOR=64, BOOL_VALUE=65, VALUE_TYPE=66, 
		ARRAY=67, LIST=68, DICTIONARY=69, ITERABLE=70, EQUALS=71, ARROW=72, OPEN_BRACE=73, 
		CLOSE_BRACE=74, OPEN_SQ_BRACKET=75, CLOSE_SQ_BRACKET=76, OPEN_BRACKET=77, 
		CLOSE_BRACKET=78, DOUBLE_DOT=79, DOT=80, COMMA=81, COLON=82, PLUS=83, 
		MINUS=84, MULT=85, DIVIDE=86, POWER=87, LT=88, GT=89, LE=90, GE=91, IS_NOT=92, 
		TYPENAME=93, IDENTIFIER=94, LITERAL_INTEGER=95, LITERAL_FLOAT=96, LITERAL_CHAR=97, 
		LITERAL_STRING=98, WHITESPACES=99, NEWLINE=100, WS=101;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"NL", "SINGLE_LINE_COMMENT", "COMMENT_MARKER", "ABSTRACT", "AND", "AS", 
		"ASSERT", "CALL", "CASE", "CATCH", "CLASS", "CONSTANT", "CONSTRUCTOR", 
		"CURRY", "DEFAULT", "DIV", "ELSE", "END", "ENUM", "FOR", "FOREACH", "FROM", 
		"FUNCTION", "GLOBAL", "IF", "IMMUTABLE", "IMPORT", "IN", "INHERITS", "INPUT", 
		"LAMBDA", "LET", "LIBRARY", "MAIN", "MOD", "NEW", "NOT", "OF", "IS", "OR", 
		"OUT", "PACKAGE", "PARTIAL", "PRINT", "PRIVATE", "PROCEDURE", "PROPERTY", 
		"REPEAT", "RETURN", "SET", "STEP", "SWITCH", "SYSTEM", "TEST", "THEN", 
		"THIS", "THROW", "TO", "TRY", "UNTIL", "VAR", "WHILE", "WITH", "XOR", 
		"BOOL_VALUE", "VALUE_TYPE", "ARRAY", "LIST", "DICTIONARY", "ITERABLE", 
		"EQUALS", "ARROW", "OPEN_BRACE", "CLOSE_BRACE", "OPEN_SQ_BRACKET", "CLOSE_SQ_BRACKET", 
		"OPEN_BRACKET", "CLOSE_BRACKET", "DOUBLE_DOT", "DOT", "COMMA", "COLON", 
		"PLUS", "MINUS", "MULT", "DIVIDE", "POWER", "LT", "GT", "LE", "GE", "IS_NOT", 
		"TYPENAME", "IDENTIFIER", "LITERAL_INTEGER", "LITERAL_FLOAT", "LITERAL_CHAR", 
		"LITERAL_STRING", "WHITESPACES", "InputCharacter", "NewLineCharacter", 
		"ExponentPart", "CommonCharacter", "SimpleEscapeSequence", "HexEscapeSequence", 
		"NewLine", "Whitespace", "UnicodeClassZS", "IdentifierStartingUCorLC", 
		"IdentifierStartingLC", "IdentifierStartingUC", "IdentifierPartCharacter", 
		"LetterCharacter", "DecimalDigitCharacter", "ConnectingCharacter", "FormattingCharacter", 
		"UnicodeEscapeSequence", "HexDigit", "UnicodeClassLU", "UnicodeClassLL", 
		"UnicodeClassND", "NEWLINE", "WS"
	};


	public ElanLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ElanLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, "'#'", "'abstract'", "'and'", "'as'", "'assert'", "'call'", 
		"'case'", "'catch'", "'class'", "'constant'", "'constructor'", "'curry'", 
		"'default'", "'div'", "'else'", "'end'", "'enum'", "'for'", "'foreach'", 
		"'from'", "'function'", "'global'", "'if'", "'immutable'", "'import'", 
		"'in'", "'inherits'", "'input'", "'lambda'", "'let'", "'library'", "'main'", 
		"'mod'", "'new'", "'not'", "'of'", "'is'", "'or'", "'out'", "'package'", 
		"'partial'", "'print'", "'private'", "'procedure'", "'property'", "'repeat'", 
		"'return'", "'set'", "'step'", "'switch'", "'system'", "'test'", "'then'", 
		"'this'", "'throw'", "'to'", "'try'", "'until'", "'var'", "'while'", "'with'", 
		"'xor'", null, null, "'Array'", "'List'", "'Dictionary'", "'Iter'", "'='", 
		"'->'", "'{'", "'}'", "'['", "']'", "'('", "')'", "'..'", "'.'", "','", 
		"':'", "'+'", "'-'", "'*'", "'/'", "'^'", "'<'", "'>'", "'<='", "'>='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "NL", "SINGLE_LINE_COMMENT", "COMMENT_MARKER", "ABSTRACT", "AND", 
		"AS", "ASSERT", "CALL", "CASE", "CATCH", "CLASS", "CONSTANT", "CONSTRUCTOR", 
		"CURRY", "DEFAULT", "DIV", "ELSE", "END", "ENUM", "FOR", "FOREACH", "FROM", 
		"FUNCTION", "GLOBAL", "IF", "IMMUTABLE", "IMPORT", "IN", "INHERITS", "INPUT", 
		"LAMBDA", "LET", "LIBRARY", "MAIN", "MOD", "NEW", "NOT", "OF", "IS", "OR", 
		"OUT", "PACKAGE", "PARTIAL", "PRINT", "PRIVATE", "PROCEDURE", "PROPERTY", 
		"REPEAT", "RETURN", "SET", "STEP", "SWITCH", "SYSTEM", "TEST", "THEN", 
		"THIS", "THROW", "TO", "TRY", "UNTIL", "VAR", "WHILE", "WITH", "XOR", 
		"BOOL_VALUE", "VALUE_TYPE", "ARRAY", "LIST", "DICTIONARY", "ITERABLE", 
		"EQUALS", "ARROW", "OPEN_BRACE", "CLOSE_BRACE", "OPEN_SQ_BRACKET", "CLOSE_SQ_BRACKET", 
		"OPEN_BRACKET", "CLOSE_BRACKET", "DOUBLE_DOT", "DOT", "COMMA", "COLON", 
		"PLUS", "MINUS", "MULT", "DIVIDE", "POWER", "LT", "GT", "LE", "GE", "IS_NOT", 
		"TYPENAME", "IDENTIFIER", "LITERAL_INTEGER", "LITERAL_FLOAT", "LITERAL_CHAR", 
		"LITERAL_STRING", "WHITESPACES", "NEWLINE", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Elan.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static ElanLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,101,950,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
		7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,
		7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,
		7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,
		104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,
		7,110,2,111,7,111,2,112,7,112,2,113,7,113,2,114,7,114,2,115,7,115,2,116,
		7,116,2,117,7,117,2,118,7,118,2,119,7,119,2,120,7,120,2,121,7,121,2,122,
		7,122,1,0,4,0,249,8,0,11,0,12,0,250,1,1,3,1,254,8,1,1,1,1,1,5,1,258,8,
		1,10,1,12,1,261,9,1,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
		3,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,
		1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,
		1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,
		1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,
		1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,16,
		1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,19,
		1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,
		1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,
		1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
		1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,28,
		1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,
		1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,32,1,32,1,32,
		1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,
		1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,38,
		1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,
		1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,
		1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,
		1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,
		1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,
		1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,
		1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,
		1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,
		1,56,1,56,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,
		1,59,1,60,1,60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,1,61,1,62,1,62,1,62,
		1,62,1,62,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,
		1,64,3,64,633,8,64,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,
		65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,3,65,657,8,65,
		1,66,1,66,1,66,1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,67,1,68,1,68,1,68,
		1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,70,
		1,70,1,71,1,71,1,71,1,72,1,72,1,73,1,73,1,74,1,74,1,75,1,75,1,76,1,76,
		1,77,1,77,1,78,1,78,1,78,1,79,1,79,1,80,1,80,1,81,1,81,1,82,1,82,1,83,
		1,83,1,84,1,84,1,85,1,85,1,86,1,86,1,87,1,87,1,88,1,88,1,89,1,89,1,89,
		1,90,1,90,1,90,1,91,1,91,5,91,734,8,91,10,91,12,91,737,9,91,1,91,1,91,
		1,92,1,92,1,93,1,93,1,94,1,94,5,94,747,8,94,10,94,12,94,750,9,94,1,95,
		1,95,1,95,1,95,3,95,756,8,95,1,96,1,96,1,96,3,96,761,8,96,1,96,1,96,1,
		96,3,96,766,8,96,1,97,1,97,1,97,5,97,771,8,97,10,97,12,97,774,9,97,1,97,
		1,97,1,98,4,98,779,8,98,11,98,12,98,780,1,98,1,98,1,99,1,99,1,100,1,100,
		1,101,1,101,1,101,3,101,792,8,101,1,101,1,101,1,102,1,102,1,102,3,102,
		799,8,102,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,
		1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,
		3,103,823,8,103,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,
		1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,
		1,104,1,104,1,104,1,104,3,104,850,8,104,1,105,1,105,1,105,3,105,855,8,
		105,1,106,1,106,3,106,859,8,106,1,107,1,107,1,108,1,108,3,108,865,8,108,
		1,108,5,108,868,8,108,10,108,12,108,871,9,108,1,109,1,109,5,109,875,8,
		109,10,109,12,109,878,9,109,1,110,1,110,5,110,882,8,110,10,110,12,110,
		885,9,110,1,111,1,111,1,111,1,111,3,111,891,8,111,1,112,1,112,1,112,3,
		112,896,8,112,1,113,1,113,3,113,900,8,113,1,114,1,114,1,115,1,115,1,116,
		1,116,1,116,1,116,1,116,1,116,1,116,1,116,1,116,1,116,1,116,1,116,1,116,
		1,116,1,116,1,116,1,116,1,116,1,116,1,116,3,116,926,8,116,1,117,3,117,
		929,8,117,1,118,1,118,1,119,1,119,1,120,1,120,1,121,3,121,938,8,121,1,
		121,1,121,3,121,942,8,121,1,122,4,122,945,8,122,11,122,12,122,946,1,122,
		1,122,0,0,123,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,
		25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,
		49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,
		73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,
		97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,
		59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,
		69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,157,
		79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,173,87,175,88,177,
		89,179,90,181,91,183,92,185,93,187,94,189,95,191,96,193,97,195,98,197,
		99,199,0,201,0,203,0,205,0,207,0,209,0,211,0,213,0,215,0,217,0,219,0,221,
		0,223,0,225,0,227,0,229,0,231,0,233,0,235,0,237,0,239,0,241,0,243,100,
		245,101,1,0,10,2,0,10,10,12,13,1,0,48,57,5,0,10,10,13,13,39,39,92,92,133,
		133,2,0,34,34,133,133,3,0,10,10,13,13,133,133,2,0,69,69,101,101,2,0,9,
		9,11,12,2,0,32,32,160,160,3,0,48,57,65,70,97,102,2,0,9,9,32,32,976,0,1,
		1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,
		13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,
		0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,
		0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,
		1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,
		0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,
		1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,
		0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,
		1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,
		0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,
		0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,
		0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,
		0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,
		0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,
		0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,
		0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,
		0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,
		0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,0,0,0,0,189,1,0,0,
		0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,0,243,1,0,0,
		0,0,245,1,0,0,0,1,248,1,0,0,0,3,253,1,0,0,0,5,264,1,0,0,0,7,266,1,0,0,
		0,9,275,1,0,0,0,11,279,1,0,0,0,13,282,1,0,0,0,15,289,1,0,0,0,17,294,1,
		0,0,0,19,299,1,0,0,0,21,305,1,0,0,0,23,311,1,0,0,0,25,320,1,0,0,0,27,332,
		1,0,0,0,29,338,1,0,0,0,31,346,1,0,0,0,33,350,1,0,0,0,35,355,1,0,0,0,37,
		359,1,0,0,0,39,364,1,0,0,0,41,368,1,0,0,0,43,376,1,0,0,0,45,381,1,0,0,
		0,47,390,1,0,0,0,49,397,1,0,0,0,51,400,1,0,0,0,53,410,1,0,0,0,55,417,1,
		0,0,0,57,420,1,0,0,0,59,429,1,0,0,0,61,435,1,0,0,0,63,442,1,0,0,0,65,446,
		1,0,0,0,67,454,1,0,0,0,69,459,1,0,0,0,71,463,1,0,0,0,73,467,1,0,0,0,75,
		471,1,0,0,0,77,474,1,0,0,0,79,477,1,0,0,0,81,480,1,0,0,0,83,484,1,0,0,
		0,85,492,1,0,0,0,87,500,1,0,0,0,89,506,1,0,0,0,91,514,1,0,0,0,93,524,1,
		0,0,0,95,533,1,0,0,0,97,540,1,0,0,0,99,547,1,0,0,0,101,551,1,0,0,0,103,
		556,1,0,0,0,105,563,1,0,0,0,107,570,1,0,0,0,109,575,1,0,0,0,111,580,1,
		0,0,0,113,585,1,0,0,0,115,591,1,0,0,0,117,594,1,0,0,0,119,598,1,0,0,0,
		121,604,1,0,0,0,123,608,1,0,0,0,125,614,1,0,0,0,127,619,1,0,0,0,129,632,
		1,0,0,0,131,656,1,0,0,0,133,658,1,0,0,0,135,664,1,0,0,0,137,669,1,0,0,
		0,139,680,1,0,0,0,141,685,1,0,0,0,143,687,1,0,0,0,145,690,1,0,0,0,147,
		692,1,0,0,0,149,694,1,0,0,0,151,696,1,0,0,0,153,698,1,0,0,0,155,700,1,
		0,0,0,157,702,1,0,0,0,159,705,1,0,0,0,161,707,1,0,0,0,163,709,1,0,0,0,
		165,711,1,0,0,0,167,713,1,0,0,0,169,715,1,0,0,0,171,717,1,0,0,0,173,719,
		1,0,0,0,175,721,1,0,0,0,177,723,1,0,0,0,179,725,1,0,0,0,181,728,1,0,0,
		0,183,731,1,0,0,0,185,740,1,0,0,0,187,742,1,0,0,0,189,744,1,0,0,0,191,
		751,1,0,0,0,193,765,1,0,0,0,195,767,1,0,0,0,197,778,1,0,0,0,199,784,1,
		0,0,0,201,786,1,0,0,0,203,788,1,0,0,0,205,798,1,0,0,0,207,822,1,0,0,0,
		209,849,1,0,0,0,211,854,1,0,0,0,213,858,1,0,0,0,215,860,1,0,0,0,217,864,
		1,0,0,0,219,872,1,0,0,0,221,879,1,0,0,0,223,890,1,0,0,0,225,895,1,0,0,
		0,227,899,1,0,0,0,229,901,1,0,0,0,231,903,1,0,0,0,233,925,1,0,0,0,235,
		928,1,0,0,0,237,930,1,0,0,0,239,932,1,0,0,0,241,934,1,0,0,0,243,941,1,
		0,0,0,245,944,1,0,0,0,247,249,7,0,0,0,248,247,1,0,0,0,249,250,1,0,0,0,
		250,248,1,0,0,0,250,251,1,0,0,0,251,2,1,0,0,0,252,254,3,1,0,0,253,252,
		1,0,0,0,253,254,1,0,0,0,254,255,1,0,0,0,255,259,3,5,2,0,256,258,3,199,
		99,0,257,256,1,0,0,0,258,261,1,0,0,0,259,257,1,0,0,0,259,260,1,0,0,0,260,
		262,1,0,0,0,261,259,1,0,0,0,262,263,6,1,0,0,263,4,1,0,0,0,264,265,5,35,
		0,0,265,6,1,0,0,0,266,267,5,97,0,0,267,268,5,98,0,0,268,269,5,115,0,0,
		269,270,5,116,0,0,270,271,5,114,0,0,271,272,5,97,0,0,272,273,5,99,0,0,
		273,274,5,116,0,0,274,8,1,0,0,0,275,276,5,97,0,0,276,277,5,110,0,0,277,
		278,5,100,0,0,278,10,1,0,0,0,279,280,5,97,0,0,280,281,5,115,0,0,281,12,
		1,0,0,0,282,283,5,97,0,0,283,284,5,115,0,0,284,285,5,115,0,0,285,286,5,
		101,0,0,286,287,5,114,0,0,287,288,5,116,0,0,288,14,1,0,0,0,289,290,5,99,
		0,0,290,291,5,97,0,0,291,292,5,108,0,0,292,293,5,108,0,0,293,16,1,0,0,
		0,294,295,5,99,0,0,295,296,5,97,0,0,296,297,5,115,0,0,297,298,5,101,0,
		0,298,18,1,0,0,0,299,300,5,99,0,0,300,301,5,97,0,0,301,302,5,116,0,0,302,
		303,5,99,0,0,303,304,5,104,0,0,304,20,1,0,0,0,305,306,5,99,0,0,306,307,
		5,108,0,0,307,308,5,97,0,0,308,309,5,115,0,0,309,310,5,115,0,0,310,22,
		1,0,0,0,311,312,5,99,0,0,312,313,5,111,0,0,313,314,5,110,0,0,314,315,5,
		115,0,0,315,316,5,116,0,0,316,317,5,97,0,0,317,318,5,110,0,0,318,319,5,
		116,0,0,319,24,1,0,0,0,320,321,5,99,0,0,321,322,5,111,0,0,322,323,5,110,
		0,0,323,324,5,115,0,0,324,325,5,116,0,0,325,326,5,114,0,0,326,327,5,117,
		0,0,327,328,5,99,0,0,328,329,5,116,0,0,329,330,5,111,0,0,330,331,5,114,
		0,0,331,26,1,0,0,0,332,333,5,99,0,0,333,334,5,117,0,0,334,335,5,114,0,
		0,335,336,5,114,0,0,336,337,5,121,0,0,337,28,1,0,0,0,338,339,5,100,0,0,
		339,340,5,101,0,0,340,341,5,102,0,0,341,342,5,97,0,0,342,343,5,117,0,0,
		343,344,5,108,0,0,344,345,5,116,0,0,345,30,1,0,0,0,346,347,5,100,0,0,347,
		348,5,105,0,0,348,349,5,118,0,0,349,32,1,0,0,0,350,351,5,101,0,0,351,352,
		5,108,0,0,352,353,5,115,0,0,353,354,5,101,0,0,354,34,1,0,0,0,355,356,5,
		101,0,0,356,357,5,110,0,0,357,358,5,100,0,0,358,36,1,0,0,0,359,360,5,101,
		0,0,360,361,5,110,0,0,361,362,5,117,0,0,362,363,5,109,0,0,363,38,1,0,0,
		0,364,365,5,102,0,0,365,366,5,111,0,0,366,367,5,114,0,0,367,40,1,0,0,0,
		368,369,5,102,0,0,369,370,5,111,0,0,370,371,5,114,0,0,371,372,5,101,0,
		0,372,373,5,97,0,0,373,374,5,99,0,0,374,375,5,104,0,0,375,42,1,0,0,0,376,
		377,5,102,0,0,377,378,5,114,0,0,378,379,5,111,0,0,379,380,5,109,0,0,380,
		44,1,0,0,0,381,382,5,102,0,0,382,383,5,117,0,0,383,384,5,110,0,0,384,385,
		5,99,0,0,385,386,5,116,0,0,386,387,5,105,0,0,387,388,5,111,0,0,388,389,
		5,110,0,0,389,46,1,0,0,0,390,391,5,103,0,0,391,392,5,108,0,0,392,393,5,
		111,0,0,393,394,5,98,0,0,394,395,5,97,0,0,395,396,5,108,0,0,396,48,1,0,
		0,0,397,398,5,105,0,0,398,399,5,102,0,0,399,50,1,0,0,0,400,401,5,105,0,
		0,401,402,5,109,0,0,402,403,5,109,0,0,403,404,5,117,0,0,404,405,5,116,
		0,0,405,406,5,97,0,0,406,407,5,98,0,0,407,408,5,108,0,0,408,409,5,101,
		0,0,409,52,1,0,0,0,410,411,5,105,0,0,411,412,5,109,0,0,412,413,5,112,0,
		0,413,414,5,111,0,0,414,415,5,114,0,0,415,416,5,116,0,0,416,54,1,0,0,0,
		417,418,5,105,0,0,418,419,5,110,0,0,419,56,1,0,0,0,420,421,5,105,0,0,421,
		422,5,110,0,0,422,423,5,104,0,0,423,424,5,101,0,0,424,425,5,114,0,0,425,
		426,5,105,0,0,426,427,5,116,0,0,427,428,5,115,0,0,428,58,1,0,0,0,429,430,
		5,105,0,0,430,431,5,110,0,0,431,432,5,112,0,0,432,433,5,117,0,0,433,434,
		5,116,0,0,434,60,1,0,0,0,435,436,5,108,0,0,436,437,5,97,0,0,437,438,5,
		109,0,0,438,439,5,98,0,0,439,440,5,100,0,0,440,441,5,97,0,0,441,62,1,0,
		0,0,442,443,5,108,0,0,443,444,5,101,0,0,444,445,5,116,0,0,445,64,1,0,0,
		0,446,447,5,108,0,0,447,448,5,105,0,0,448,449,5,98,0,0,449,450,5,114,0,
		0,450,451,5,97,0,0,451,452,5,114,0,0,452,453,5,121,0,0,453,66,1,0,0,0,
		454,455,5,109,0,0,455,456,5,97,0,0,456,457,5,105,0,0,457,458,5,110,0,0,
		458,68,1,0,0,0,459,460,5,109,0,0,460,461,5,111,0,0,461,462,5,100,0,0,462,
		70,1,0,0,0,463,464,5,110,0,0,464,465,5,101,0,0,465,466,5,119,0,0,466,72,
		1,0,0,0,467,468,5,110,0,0,468,469,5,111,0,0,469,470,5,116,0,0,470,74,1,
		0,0,0,471,472,5,111,0,0,472,473,5,102,0,0,473,76,1,0,0,0,474,475,5,105,
		0,0,475,476,5,115,0,0,476,78,1,0,0,0,477,478,5,111,0,0,478,479,5,114,0,
		0,479,80,1,0,0,0,480,481,5,111,0,0,481,482,5,117,0,0,482,483,5,116,0,0,
		483,82,1,0,0,0,484,485,5,112,0,0,485,486,5,97,0,0,486,487,5,99,0,0,487,
		488,5,107,0,0,488,489,5,97,0,0,489,490,5,103,0,0,490,491,5,101,0,0,491,
		84,1,0,0,0,492,493,5,112,0,0,493,494,5,97,0,0,494,495,5,114,0,0,495,496,
		5,116,0,0,496,497,5,105,0,0,497,498,5,97,0,0,498,499,5,108,0,0,499,86,
		1,0,0,0,500,501,5,112,0,0,501,502,5,114,0,0,502,503,5,105,0,0,503,504,
		5,110,0,0,504,505,5,116,0,0,505,88,1,0,0,0,506,507,5,112,0,0,507,508,5,
		114,0,0,508,509,5,105,0,0,509,510,5,118,0,0,510,511,5,97,0,0,511,512,5,
		116,0,0,512,513,5,101,0,0,513,90,1,0,0,0,514,515,5,112,0,0,515,516,5,114,
		0,0,516,517,5,111,0,0,517,518,5,99,0,0,518,519,5,101,0,0,519,520,5,100,
		0,0,520,521,5,117,0,0,521,522,5,114,0,0,522,523,5,101,0,0,523,92,1,0,0,
		0,524,525,5,112,0,0,525,526,5,114,0,0,526,527,5,111,0,0,527,528,5,112,
		0,0,528,529,5,101,0,0,529,530,5,114,0,0,530,531,5,116,0,0,531,532,5,121,
		0,0,532,94,1,0,0,0,533,534,5,114,0,0,534,535,5,101,0,0,535,536,5,112,0,
		0,536,537,5,101,0,0,537,538,5,97,0,0,538,539,5,116,0,0,539,96,1,0,0,0,
		540,541,5,114,0,0,541,542,5,101,0,0,542,543,5,116,0,0,543,544,5,117,0,
		0,544,545,5,114,0,0,545,546,5,110,0,0,546,98,1,0,0,0,547,548,5,115,0,0,
		548,549,5,101,0,0,549,550,5,116,0,0,550,100,1,0,0,0,551,552,5,115,0,0,
		552,553,5,116,0,0,553,554,5,101,0,0,554,555,5,112,0,0,555,102,1,0,0,0,
		556,557,5,115,0,0,557,558,5,119,0,0,558,559,5,105,0,0,559,560,5,116,0,
		0,560,561,5,99,0,0,561,562,5,104,0,0,562,104,1,0,0,0,563,564,5,115,0,0,
		564,565,5,121,0,0,565,566,5,115,0,0,566,567,5,116,0,0,567,568,5,101,0,
		0,568,569,5,109,0,0,569,106,1,0,0,0,570,571,5,116,0,0,571,572,5,101,0,
		0,572,573,5,115,0,0,573,574,5,116,0,0,574,108,1,0,0,0,575,576,5,116,0,
		0,576,577,5,104,0,0,577,578,5,101,0,0,578,579,5,110,0,0,579,110,1,0,0,
		0,580,581,5,116,0,0,581,582,5,104,0,0,582,583,5,105,0,0,583,584,5,115,
		0,0,584,112,1,0,0,0,585,586,5,116,0,0,586,587,5,104,0,0,587,588,5,114,
		0,0,588,589,5,111,0,0,589,590,5,119,0,0,590,114,1,0,0,0,591,592,5,116,
		0,0,592,593,5,111,0,0,593,116,1,0,0,0,594,595,5,116,0,0,595,596,5,114,
		0,0,596,597,5,121,0,0,597,118,1,0,0,0,598,599,5,117,0,0,599,600,5,110,
		0,0,600,601,5,116,0,0,601,602,5,105,0,0,602,603,5,108,0,0,603,120,1,0,
		0,0,604,605,5,118,0,0,605,606,5,97,0,0,606,607,5,114,0,0,607,122,1,0,0,
		0,608,609,5,119,0,0,609,610,5,104,0,0,610,611,5,105,0,0,611,612,5,108,
		0,0,612,613,5,101,0,0,613,124,1,0,0,0,614,615,5,119,0,0,615,616,5,105,
		0,0,616,617,5,116,0,0,617,618,5,104,0,0,618,126,1,0,0,0,619,620,5,120,
		0,0,620,621,5,111,0,0,621,622,5,114,0,0,622,128,1,0,0,0,623,624,5,116,
		0,0,624,625,5,114,0,0,625,626,5,117,0,0,626,633,5,101,0,0,627,628,5,102,
		0,0,628,629,5,97,0,0,629,630,5,108,0,0,630,631,5,115,0,0,631,633,5,101,
		0,0,632,623,1,0,0,0,632,627,1,0,0,0,633,130,1,0,0,0,634,635,5,73,0,0,635,
		636,5,110,0,0,636,657,5,116,0,0,637,638,5,70,0,0,638,639,5,108,0,0,639,
		640,5,111,0,0,640,641,5,97,0,0,641,657,5,116,0,0,642,643,5,67,0,0,643,
		644,5,104,0,0,644,645,5,97,0,0,645,657,5,114,0,0,646,647,5,83,0,0,647,
		648,5,116,0,0,648,649,5,114,0,0,649,650,5,105,0,0,650,651,5,110,0,0,651,
		657,5,103,0,0,652,653,5,66,0,0,653,654,5,111,0,0,654,655,5,111,0,0,655,
		657,5,108,0,0,656,634,1,0,0,0,656,637,1,0,0,0,656,642,1,0,0,0,656,646,
		1,0,0,0,656,652,1,0,0,0,657,132,1,0,0,0,658,659,5,65,0,0,659,660,5,114,
		0,0,660,661,5,114,0,0,661,662,5,97,0,0,662,663,5,121,0,0,663,134,1,0,0,
		0,664,665,5,76,0,0,665,666,5,105,0,0,666,667,5,115,0,0,667,668,5,116,0,
		0,668,136,1,0,0,0,669,670,5,68,0,0,670,671,5,105,0,0,671,672,5,99,0,0,
		672,673,5,116,0,0,673,674,5,105,0,0,674,675,5,111,0,0,675,676,5,110,0,
		0,676,677,5,97,0,0,677,678,5,114,0,0,678,679,5,121,0,0,679,138,1,0,0,0,
		680,681,5,73,0,0,681,682,5,116,0,0,682,683,5,101,0,0,683,684,5,114,0,0,
		684,140,1,0,0,0,685,686,5,61,0,0,686,142,1,0,0,0,687,688,5,45,0,0,688,
		689,5,62,0,0,689,144,1,0,0,0,690,691,5,123,0,0,691,146,1,0,0,0,692,693,
		5,125,0,0,693,148,1,0,0,0,694,695,5,91,0,0,695,150,1,0,0,0,696,697,5,93,
		0,0,697,152,1,0,0,0,698,699,5,40,0,0,699,154,1,0,0,0,700,701,5,41,0,0,
		701,156,1,0,0,0,702,703,5,46,0,0,703,704,5,46,0,0,704,158,1,0,0,0,705,
		706,5,46,0,0,706,160,1,0,0,0,707,708,5,44,0,0,708,162,1,0,0,0,709,710,
		5,58,0,0,710,164,1,0,0,0,711,712,5,43,0,0,712,166,1,0,0,0,713,714,5,45,
		0,0,714,168,1,0,0,0,715,716,5,42,0,0,716,170,1,0,0,0,717,718,5,47,0,0,
		718,172,1,0,0,0,719,720,5,94,0,0,720,174,1,0,0,0,721,722,5,60,0,0,722,
		176,1,0,0,0,723,724,5,62,0,0,724,178,1,0,0,0,725,726,5,60,0,0,726,727,
		5,61,0,0,727,180,1,0,0,0,728,729,5,62,0,0,729,730,5,61,0,0,730,182,1,0,
		0,0,731,735,3,77,38,0,732,734,3,213,106,0,733,732,1,0,0,0,734,737,1,0,
		0,0,735,733,1,0,0,0,735,736,1,0,0,0,736,738,1,0,0,0,737,735,1,0,0,0,738,
		739,3,73,36,0,739,184,1,0,0,0,740,741,3,221,110,0,741,186,1,0,0,0,742,
		743,3,219,109,0,743,188,1,0,0,0,744,748,7,1,0,0,745,747,7,1,0,0,746,745,
		1,0,0,0,747,750,1,0,0,0,748,746,1,0,0,0,748,749,1,0,0,0,749,190,1,0,0,
		0,750,748,1,0,0,0,751,752,3,189,94,0,752,753,3,159,79,0,753,755,3,189,
		94,0,754,756,3,203,101,0,755,754,1,0,0,0,755,756,1,0,0,0,756,192,1,0,0,
		0,757,760,5,39,0,0,758,761,8,2,0,0,759,761,3,205,102,0,760,758,1,0,0,0,
		760,759,1,0,0,0,761,762,1,0,0,0,762,766,5,39,0,0,763,764,5,39,0,0,764,
		766,5,39,0,0,765,757,1,0,0,0,765,763,1,0,0,0,766,194,1,0,0,0,767,772,5,
		34,0,0,768,771,8,3,0,0,769,771,3,205,102,0,770,768,1,0,0,0,770,769,1,0,
		0,0,771,774,1,0,0,0,772,770,1,0,0,0,772,773,1,0,0,0,773,775,1,0,0,0,774,
		772,1,0,0,0,775,776,5,34,0,0,776,196,1,0,0,0,777,779,3,213,106,0,778,777,
		1,0,0,0,779,780,1,0,0,0,780,778,1,0,0,0,780,781,1,0,0,0,781,782,1,0,0,
		0,782,783,6,98,0,0,783,198,1,0,0,0,784,785,8,4,0,0,785,200,1,0,0,0,786,
		787,7,4,0,0,787,202,1,0,0,0,788,791,7,5,0,0,789,792,3,165,82,0,790,792,
		3,167,83,0,791,789,1,0,0,0,791,790,1,0,0,0,791,792,1,0,0,0,792,793,1,0,
		0,0,793,794,3,189,94,0,794,204,1,0,0,0,795,799,3,207,103,0,796,799,3,209,
		104,0,797,799,3,233,116,0,798,795,1,0,0,0,798,796,1,0,0,0,798,797,1,0,
		0,0,799,206,1,0,0,0,800,801,5,92,0,0,801,823,5,39,0,0,802,803,5,92,0,0,
		803,823,5,34,0,0,804,805,5,92,0,0,805,823,5,92,0,0,806,807,5,92,0,0,807,
		823,5,48,0,0,808,809,5,92,0,0,809,823,5,97,0,0,810,811,5,92,0,0,811,823,
		5,98,0,0,812,813,5,92,0,0,813,823,5,102,0,0,814,815,5,92,0,0,815,823,5,
		110,0,0,816,817,5,92,0,0,817,823,5,114,0,0,818,819,5,92,0,0,819,823,5,
		116,0,0,820,821,5,92,0,0,821,823,5,118,0,0,822,800,1,0,0,0,822,802,1,0,
		0,0,822,804,1,0,0,0,822,806,1,0,0,0,822,808,1,0,0,0,822,810,1,0,0,0,822,
		812,1,0,0,0,822,814,1,0,0,0,822,816,1,0,0,0,822,818,1,0,0,0,822,820,1,
		0,0,0,823,208,1,0,0,0,824,825,5,92,0,0,825,826,5,120,0,0,826,827,1,0,0,
		0,827,850,3,235,117,0,828,829,5,92,0,0,829,830,5,120,0,0,830,831,1,0,0,
		0,831,832,3,235,117,0,832,833,3,235,117,0,833,850,1,0,0,0,834,835,5,92,
		0,0,835,836,5,120,0,0,836,837,1,0,0,0,837,838,3,235,117,0,838,839,3,235,
		117,0,839,840,3,235,117,0,840,850,1,0,0,0,841,842,5,92,0,0,842,843,5,120,
		0,0,843,844,1,0,0,0,844,845,3,235,117,0,845,846,3,235,117,0,846,847,3,
		235,117,0,847,848,3,235,117,0,848,850,1,0,0,0,849,824,1,0,0,0,849,828,
		1,0,0,0,849,834,1,0,0,0,849,841,1,0,0,0,850,210,1,0,0,0,851,852,5,13,0,
		0,852,855,5,10,0,0,853,855,7,4,0,0,854,851,1,0,0,0,854,853,1,0,0,0,855,
		212,1,0,0,0,856,859,3,215,107,0,857,859,7,6,0,0,858,856,1,0,0,0,858,857,
		1,0,0,0,859,214,1,0,0,0,860,861,7,7,0,0,861,216,1,0,0,0,862,865,3,239,
		119,0,863,865,3,237,118,0,864,862,1,0,0,0,864,863,1,0,0,0,865,869,1,0,
		0,0,866,868,3,223,111,0,867,866,1,0,0,0,868,871,1,0,0,0,869,867,1,0,0,
		0,869,870,1,0,0,0,870,218,1,0,0,0,871,869,1,0,0,0,872,876,3,239,119,0,
		873,875,3,223,111,0,874,873,1,0,0,0,875,878,1,0,0,0,876,874,1,0,0,0,876,
		877,1,0,0,0,877,220,1,0,0,0,878,876,1,0,0,0,879,883,3,237,118,0,880,882,
		3,223,111,0,881,880,1,0,0,0,882,885,1,0,0,0,883,881,1,0,0,0,883,884,1,
		0,0,0,884,222,1,0,0,0,885,883,1,0,0,0,886,891,3,237,118,0,887,891,3,239,
		119,0,888,891,3,227,113,0,889,891,5,95,0,0,890,886,1,0,0,0,890,887,1,0,
		0,0,890,888,1,0,0,0,890,889,1,0,0,0,891,224,1,0,0,0,892,896,3,237,118,
		0,893,896,3,239,119,0,894,896,3,233,116,0,895,892,1,0,0,0,895,893,1,0,
		0,0,895,894,1,0,0,0,896,226,1,0,0,0,897,900,3,241,120,0,898,900,3,233,
		116,0,899,897,1,0,0,0,899,898,1,0,0,0,900,228,1,0,0,0,901,902,3,233,116,
		0,902,230,1,0,0,0,903,904,3,233,116,0,904,232,1,0,0,0,905,906,5,92,0,0,
		906,907,5,117,0,0,907,908,1,0,0,0,908,909,3,235,117,0,909,910,3,235,117,
		0,910,911,3,235,117,0,911,912,3,235,117,0,912,926,1,0,0,0,913,914,5,92,
		0,0,914,915,5,85,0,0,915,916,1,0,0,0,916,917,3,235,117,0,917,918,3,235,
		117,0,918,919,3,235,117,0,919,920,3,235,117,0,920,921,3,235,117,0,921,
		922,3,235,117,0,922,923,3,235,117,0,923,924,3,235,117,0,924,926,1,0,0,
		0,925,905,1,0,0,0,925,913,1,0,0,0,926,234,1,0,0,0,927,929,7,8,0,0,928,
		927,1,0,0,0,929,236,1,0,0,0,930,931,2,65,90,0,931,238,1,0,0,0,932,933,
		2,97,122,0,933,240,1,0,0,0,934,935,2,48,57,0,935,242,1,0,0,0,936,938,5,
		13,0,0,937,936,1,0,0,0,937,938,1,0,0,0,938,939,1,0,0,0,939,942,5,10,0,
		0,940,942,5,13,0,0,941,937,1,0,0,0,941,940,1,0,0,0,942,244,1,0,0,0,943,
		945,7,9,0,0,944,943,1,0,0,0,945,946,1,0,0,0,946,944,1,0,0,0,946,947,1,
		0,0,0,947,948,1,0,0,0,948,949,6,122,0,0,949,246,1,0,0,0,32,0,250,253,259,
		632,656,735,748,755,760,765,770,772,780,791,798,822,849,854,858,864,869,
		876,883,890,895,899,925,928,937,941,946,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
