//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c://Elan//Repository//Parser//Elan_Lexer.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class Elan_Lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		NL=1, SINGLE_LINE_COMMENT=2, COMMENT_MARKER=3, ABSTRACT=4, CASE=5, CATCH=6, 
		CLASS=7, CONSTANT=8, CONSTRUCTOR=9, CURRY=10, DEFAULT=11, ELSE=12, END=13, 
		ENUM=14, FOR=15, FOREACH=16, FUNCTION=17, GLOBAL=18, IF=19, IMMUTABLE=20, 
		IN=21, INHERITS=22, LAMBDA=23, LET=24, MAIN=25, PARTIAL=26, PRIVATE=27, 
		PROCEDURE=28, PROPERTY=29, REPEAT=30, RETURN=31, SELF=32, STEP=33, SWITCH=34, 
		TEST=35, THEN=36, TO=37, TRY=38, UNTIL=39, VAR=40, WHILE=41, WITH=42, 
		BOOL_VALUE=43, VALUE_TYPE=44, ARRAY=45, LIST=46, DICTIONARY=47, ITERABLE=48, 
		ASSIGN=49, ARROW=50, OPEN_BRACE=51, CLOSE_BRACE=52, OPEN_SQ_BRACKET=53, 
		CLOSE_SQ_BRACKET=54, OPEN_BRACKET=55, CLOSE_BRACKET=56, DOUBLE_DOT=57, 
		DOT=58, COMMA=59, COLON=60, PLUS=61, MINUS=62, MULT=63, DIVIDE=64, POWER=65, 
		MOD=66, INT_DIV=67, LT=68, GT=69, OP_AND=70, OP_NOT=71, OP_OR=72, OP_XOR=73, 
		OP_EQ=74, OP_NE=75, OP_LE=76, OP_GE=77, TYPENAME=78, IDENTIFIER=79, LITERAL_INTEGER=80, 
		LITERAL_FLOAT=81, LITERAL_CHAR=82, LITERAL_STRING=83, WHITESPACES=84, 
		NEWLINE=85, WS=86;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"NL", "SINGLE_LINE_COMMENT", "COMMENT_MARKER", "ABSTRACT", "CASE", "CATCH", 
		"CLASS", "CONSTANT", "CONSTRUCTOR", "CURRY", "DEFAULT", "ELSE", "END", 
		"ENUM", "FOR", "FOREACH", "FUNCTION", "GLOBAL", "IF", "IMMUTABLE", "IN", 
		"INHERITS", "LAMBDA", "LET", "MAIN", "PARTIAL", "PRIVATE", "PROCEDURE", 
		"PROPERTY", "REPEAT", "RETURN", "SELF", "STEP", "SWITCH", "TEST", "THEN", 
		"TO", "TRY", "UNTIL", "VAR", "WHILE", "WITH", "BOOL_VALUE", "VALUE_TYPE", 
		"ARRAY", "LIST", "DICTIONARY", "ITERABLE", "ASSIGN", "ARROW", "OPEN_BRACE", 
		"CLOSE_BRACE", "OPEN_SQ_BRACKET", "CLOSE_SQ_BRACKET", "OPEN_BRACKET", 
		"CLOSE_BRACKET", "DOUBLE_DOT", "DOT", "COMMA", "COLON", "PLUS", "MINUS", 
		"MULT", "DIVIDE", "POWER", "MOD", "INT_DIV", "LT", "GT", "OP_AND", "OP_NOT", 
		"OP_OR", "OP_XOR", "OP_EQ", "OP_NE", "OP_LE", "OP_GE", "TYPENAME", "IDENTIFIER", 
		"LITERAL_INTEGER", "LITERAL_FLOAT", "LITERAL_CHAR", "LITERAL_STRING", 
		"WHITESPACES", "InputCharacter", "NewLineCharacter", "ExponentPart", "CommonCharacter", 
		"SimpleEscapeSequence", "HexEscapeSequence", "NewLine", "Whitespace", 
		"UnicodeClassZS", "IdentifierStartingUCorLC", "IdentifierStartingLC", 
		"IdentifierStartingUC", "IdentifierPartCharacter", "LetterCharacter", 
		"DecimalDigitCharacter", "ConnectingCharacter", "FormattingCharacter", 
		"UnicodeEscapeSequence", "HexDigit", "UnicodeClassLU", "UnicodeClassLL", 
		"UnicodeClassND", "NEWLINE", "WS"
	};


	public Elan_Lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public Elan_Lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, "'#'", "'abstract'", "'case'", "'catch'", "'class'", 
		"'constant'", "'constructor'", "'curry'", "'default'", "'else'", "'end'", 
		"'enum'", "'for'", "'foreach'", "'function'", "'global'", "'if'", "'immutable'", 
		"'in'", "'inherits'", "'lambda'", "'let'", "'main'", "'partial'", "'private'", 
		"'procedure'", "'property'", "'repeat'", "'return'", "'self'", "'step'", 
		"'switch'", "'test'", "'then'", "'to'", "'try'", "'until'", "'var'", "'while'", 
		"'with'", null, null, "'Array'", "'List'", "'Dictionary'", "'Iter'", "'='", 
		"'->'", "'{'", "'}'", "'['", "']'", "'('", "')'", "'..'", "'.'", "','", 
		"':'", "'+'", "'-'", "'*'", "'/'", "'^'", "'mod'", "'div'", "'<'", "'>'", 
		"'and'", "'not'", "'or'", "'xor'", "'is'", null, "'<='", "'>='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "NL", "SINGLE_LINE_COMMENT", "COMMENT_MARKER", "ABSTRACT", "CASE", 
		"CATCH", "CLASS", "CONSTANT", "CONSTRUCTOR", "CURRY", "DEFAULT", "ELSE", 
		"END", "ENUM", "FOR", "FOREACH", "FUNCTION", "GLOBAL", "IF", "IMMUTABLE", 
		"IN", "INHERITS", "LAMBDA", "LET", "MAIN", "PARTIAL", "PRIVATE", "PROCEDURE", 
		"PROPERTY", "REPEAT", "RETURN", "SELF", "STEP", "SWITCH", "TEST", "THEN", 
		"TO", "TRY", "UNTIL", "VAR", "WHILE", "WITH", "BOOL_VALUE", "VALUE_TYPE", 
		"ARRAY", "LIST", "DICTIONARY", "ITERABLE", "ASSIGN", "ARROW", "OPEN_BRACE", 
		"CLOSE_BRACE", "OPEN_SQ_BRACKET", "CLOSE_SQ_BRACKET", "OPEN_BRACKET", 
		"CLOSE_BRACKET", "DOUBLE_DOT", "DOT", "COMMA", "COLON", "PLUS", "MINUS", 
		"MULT", "DIVIDE", "POWER", "MOD", "INT_DIV", "LT", "GT", "OP_AND", "OP_NOT", 
		"OP_OR", "OP_XOR", "OP_EQ", "OP_NE", "OP_LE", "OP_GE", "TYPENAME", "IDENTIFIER", 
		"LITERAL_INTEGER", "LITERAL_FLOAT", "LITERAL_CHAR", "LITERAL_STRING", 
		"WHITESPACES", "NEWLINE", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Elan_Lexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static Elan_Lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,86,841,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
		7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,
		7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,
		7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,
		104,2,105,7,105,2,106,7,106,2,107,7,107,1,0,4,0,219,8,0,11,0,12,0,220,
		1,1,3,1,224,8,1,1,1,1,1,5,1,228,8,1,10,1,12,1,231,9,1,1,1,1,1,1,2,1,2,
		1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,
		5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,
		1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,
		9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,12,
		1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,15,1,15,
		1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
		1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,19,
		1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,21,
		1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,
		1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
		1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,
		1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,
		1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,
		1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,
		1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,36,
		1,36,1,36,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,
		1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,42,
		1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,3,42,494,8,42,1,43,1,43,1,43,1,
		43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,
		43,1,43,1,43,1,43,1,43,3,43,518,8,43,1,44,1,44,1,44,1,44,1,44,1,44,1,45,
		1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,
		1,46,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,49,1,49,1,49,1,50,1,50,1,51,
		1,51,1,52,1,52,1,53,1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,56,1,57,1,57,
		1,58,1,58,1,59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,
		1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,66,1,67,1,67,1,68,1,68,1,69,1,69,
		1,69,1,69,1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,73,
		1,73,1,73,1,74,1,74,1,74,1,74,1,74,1,74,5,74,619,8,74,10,74,12,74,622,
		9,74,1,74,1,74,1,74,3,74,627,8,74,1,75,1,75,1,75,1,76,1,76,1,76,1,77,1,
		77,1,78,1,78,1,79,1,79,5,79,641,8,79,10,79,12,79,644,9,79,1,80,1,80,1,
		80,1,80,3,80,650,8,80,1,81,1,81,1,81,3,81,655,8,81,1,81,1,81,1,82,1,82,
		1,82,5,82,662,8,82,10,82,12,82,665,9,82,1,82,1,82,1,83,4,83,670,8,83,11,
		83,12,83,671,1,83,1,83,1,84,1,84,1,85,1,85,1,86,1,86,1,86,3,86,683,8,86,
		1,86,1,86,1,87,1,87,1,87,3,87,690,8,87,1,88,1,88,1,88,1,88,1,88,1,88,1,
		88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,
		88,1,88,3,88,714,8,88,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,
		1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,
		1,89,3,89,741,8,89,1,90,1,90,1,90,3,90,746,8,90,1,91,1,91,3,91,750,8,91,
		1,92,1,92,1,93,1,93,3,93,756,8,93,1,93,5,93,759,8,93,10,93,12,93,762,9,
		93,1,94,1,94,5,94,766,8,94,10,94,12,94,769,9,94,1,95,1,95,5,95,773,8,95,
		10,95,12,95,776,9,95,1,96,1,96,1,96,1,96,3,96,782,8,96,1,97,1,97,1,97,
		3,97,787,8,97,1,98,1,98,3,98,791,8,98,1,99,1,99,1,100,1,100,1,101,1,101,
		1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,
		1,101,1,101,1,101,1,101,1,101,1,101,3,101,817,8,101,1,102,3,102,820,8,
		102,1,103,1,103,1,104,1,104,1,105,1,105,1,106,3,106,829,8,106,1,106,1,
		106,3,106,833,8,106,1,107,4,107,836,8,107,11,107,12,107,837,1,107,1,107,
		0,0,108,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,
		27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,
		51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,
		75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,
		99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,
		60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,
		70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,157,79,159,
		80,161,81,163,82,165,83,167,84,169,0,171,0,173,0,175,0,177,0,179,0,181,
		0,183,0,185,0,187,0,189,0,191,0,193,0,195,0,197,0,199,0,201,0,203,0,205,
		0,207,0,209,0,211,0,213,85,215,86,1,0,10,2,0,10,10,12,13,1,0,48,57,5,0,
		10,10,13,13,39,39,92,92,133,133,2,0,34,34,133,133,3,0,10,10,13,13,133,
		133,2,0,69,69,101,101,2,0,9,9,11,12,2,0,32,32,160,160,3,0,48,57,65,70,
		97,102,2,0,9,9,32,32,867,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,
		0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,
		1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,
		0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,
		1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,
		0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,
		1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,
		0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,
		1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,
		0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,
		0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,
		0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,
		0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,
		0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,
		0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,
		0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,
		0,167,1,0,0,0,0,213,1,0,0,0,0,215,1,0,0,0,1,218,1,0,0,0,3,223,1,0,0,0,
		5,234,1,0,0,0,7,236,1,0,0,0,9,245,1,0,0,0,11,250,1,0,0,0,13,256,1,0,0,
		0,15,262,1,0,0,0,17,271,1,0,0,0,19,283,1,0,0,0,21,289,1,0,0,0,23,297,1,
		0,0,0,25,302,1,0,0,0,27,306,1,0,0,0,29,311,1,0,0,0,31,315,1,0,0,0,33,323,
		1,0,0,0,35,332,1,0,0,0,37,339,1,0,0,0,39,342,1,0,0,0,41,352,1,0,0,0,43,
		355,1,0,0,0,45,364,1,0,0,0,47,371,1,0,0,0,49,375,1,0,0,0,51,380,1,0,0,
		0,53,388,1,0,0,0,55,396,1,0,0,0,57,406,1,0,0,0,59,415,1,0,0,0,61,422,1,
		0,0,0,63,429,1,0,0,0,65,434,1,0,0,0,67,439,1,0,0,0,69,446,1,0,0,0,71,451,
		1,0,0,0,73,456,1,0,0,0,75,459,1,0,0,0,77,463,1,0,0,0,79,469,1,0,0,0,81,
		473,1,0,0,0,83,479,1,0,0,0,85,493,1,0,0,0,87,517,1,0,0,0,89,519,1,0,0,
		0,91,525,1,0,0,0,93,530,1,0,0,0,95,541,1,0,0,0,97,546,1,0,0,0,99,548,1,
		0,0,0,101,551,1,0,0,0,103,553,1,0,0,0,105,555,1,0,0,0,107,557,1,0,0,0,
		109,559,1,0,0,0,111,561,1,0,0,0,113,563,1,0,0,0,115,566,1,0,0,0,117,568,
		1,0,0,0,119,570,1,0,0,0,121,572,1,0,0,0,123,574,1,0,0,0,125,576,1,0,0,
		0,127,578,1,0,0,0,129,580,1,0,0,0,131,582,1,0,0,0,133,586,1,0,0,0,135,
		590,1,0,0,0,137,592,1,0,0,0,139,594,1,0,0,0,141,598,1,0,0,0,143,602,1,
		0,0,0,145,605,1,0,0,0,147,609,1,0,0,0,149,626,1,0,0,0,151,628,1,0,0,0,
		153,631,1,0,0,0,155,634,1,0,0,0,157,636,1,0,0,0,159,638,1,0,0,0,161,645,
		1,0,0,0,163,651,1,0,0,0,165,658,1,0,0,0,167,669,1,0,0,0,169,675,1,0,0,
		0,171,677,1,0,0,0,173,679,1,0,0,0,175,689,1,0,0,0,177,713,1,0,0,0,179,
		740,1,0,0,0,181,745,1,0,0,0,183,749,1,0,0,0,185,751,1,0,0,0,187,755,1,
		0,0,0,189,763,1,0,0,0,191,770,1,0,0,0,193,781,1,0,0,0,195,786,1,0,0,0,
		197,790,1,0,0,0,199,792,1,0,0,0,201,794,1,0,0,0,203,816,1,0,0,0,205,819,
		1,0,0,0,207,821,1,0,0,0,209,823,1,0,0,0,211,825,1,0,0,0,213,832,1,0,0,
		0,215,835,1,0,0,0,217,219,7,0,0,0,218,217,1,0,0,0,219,220,1,0,0,0,220,
		218,1,0,0,0,220,221,1,0,0,0,221,2,1,0,0,0,222,224,3,1,0,0,223,222,1,0,
		0,0,223,224,1,0,0,0,224,225,1,0,0,0,225,229,3,5,2,0,226,228,3,169,84,0,
		227,226,1,0,0,0,228,231,1,0,0,0,229,227,1,0,0,0,229,230,1,0,0,0,230,232,
		1,0,0,0,231,229,1,0,0,0,232,233,6,1,0,0,233,4,1,0,0,0,234,235,5,35,0,0,
		235,6,1,0,0,0,236,237,5,97,0,0,237,238,5,98,0,0,238,239,5,115,0,0,239,
		240,5,116,0,0,240,241,5,114,0,0,241,242,5,97,0,0,242,243,5,99,0,0,243,
		244,5,116,0,0,244,8,1,0,0,0,245,246,5,99,0,0,246,247,5,97,0,0,247,248,
		5,115,0,0,248,249,5,101,0,0,249,10,1,0,0,0,250,251,5,99,0,0,251,252,5,
		97,0,0,252,253,5,116,0,0,253,254,5,99,0,0,254,255,5,104,0,0,255,12,1,0,
		0,0,256,257,5,99,0,0,257,258,5,108,0,0,258,259,5,97,0,0,259,260,5,115,
		0,0,260,261,5,115,0,0,261,14,1,0,0,0,262,263,5,99,0,0,263,264,5,111,0,
		0,264,265,5,110,0,0,265,266,5,115,0,0,266,267,5,116,0,0,267,268,5,97,0,
		0,268,269,5,110,0,0,269,270,5,116,0,0,270,16,1,0,0,0,271,272,5,99,0,0,
		272,273,5,111,0,0,273,274,5,110,0,0,274,275,5,115,0,0,275,276,5,116,0,
		0,276,277,5,114,0,0,277,278,5,117,0,0,278,279,5,99,0,0,279,280,5,116,0,
		0,280,281,5,111,0,0,281,282,5,114,0,0,282,18,1,0,0,0,283,284,5,99,0,0,
		284,285,5,117,0,0,285,286,5,114,0,0,286,287,5,114,0,0,287,288,5,121,0,
		0,288,20,1,0,0,0,289,290,5,100,0,0,290,291,5,101,0,0,291,292,5,102,0,0,
		292,293,5,97,0,0,293,294,5,117,0,0,294,295,5,108,0,0,295,296,5,116,0,0,
		296,22,1,0,0,0,297,298,5,101,0,0,298,299,5,108,0,0,299,300,5,115,0,0,300,
		301,5,101,0,0,301,24,1,0,0,0,302,303,5,101,0,0,303,304,5,110,0,0,304,305,
		5,100,0,0,305,26,1,0,0,0,306,307,5,101,0,0,307,308,5,110,0,0,308,309,5,
		117,0,0,309,310,5,109,0,0,310,28,1,0,0,0,311,312,5,102,0,0,312,313,5,111,
		0,0,313,314,5,114,0,0,314,30,1,0,0,0,315,316,5,102,0,0,316,317,5,111,0,
		0,317,318,5,114,0,0,318,319,5,101,0,0,319,320,5,97,0,0,320,321,5,99,0,
		0,321,322,5,104,0,0,322,32,1,0,0,0,323,324,5,102,0,0,324,325,5,117,0,0,
		325,326,5,110,0,0,326,327,5,99,0,0,327,328,5,116,0,0,328,329,5,105,0,0,
		329,330,5,111,0,0,330,331,5,110,0,0,331,34,1,0,0,0,332,333,5,103,0,0,333,
		334,5,108,0,0,334,335,5,111,0,0,335,336,5,98,0,0,336,337,5,97,0,0,337,
		338,5,108,0,0,338,36,1,0,0,0,339,340,5,105,0,0,340,341,5,102,0,0,341,38,
		1,0,0,0,342,343,5,105,0,0,343,344,5,109,0,0,344,345,5,109,0,0,345,346,
		5,117,0,0,346,347,5,116,0,0,347,348,5,97,0,0,348,349,5,98,0,0,349,350,
		5,108,0,0,350,351,5,101,0,0,351,40,1,0,0,0,352,353,5,105,0,0,353,354,5,
		110,0,0,354,42,1,0,0,0,355,356,5,105,0,0,356,357,5,110,0,0,357,358,5,104,
		0,0,358,359,5,101,0,0,359,360,5,114,0,0,360,361,5,105,0,0,361,362,5,116,
		0,0,362,363,5,115,0,0,363,44,1,0,0,0,364,365,5,108,0,0,365,366,5,97,0,
		0,366,367,5,109,0,0,367,368,5,98,0,0,368,369,5,100,0,0,369,370,5,97,0,
		0,370,46,1,0,0,0,371,372,5,108,0,0,372,373,5,101,0,0,373,374,5,116,0,0,
		374,48,1,0,0,0,375,376,5,109,0,0,376,377,5,97,0,0,377,378,5,105,0,0,378,
		379,5,110,0,0,379,50,1,0,0,0,380,381,5,112,0,0,381,382,5,97,0,0,382,383,
		5,114,0,0,383,384,5,116,0,0,384,385,5,105,0,0,385,386,5,97,0,0,386,387,
		5,108,0,0,387,52,1,0,0,0,388,389,5,112,0,0,389,390,5,114,0,0,390,391,5,
		105,0,0,391,392,5,118,0,0,392,393,5,97,0,0,393,394,5,116,0,0,394,395,5,
		101,0,0,395,54,1,0,0,0,396,397,5,112,0,0,397,398,5,114,0,0,398,399,5,111,
		0,0,399,400,5,99,0,0,400,401,5,101,0,0,401,402,5,100,0,0,402,403,5,117,
		0,0,403,404,5,114,0,0,404,405,5,101,0,0,405,56,1,0,0,0,406,407,5,112,0,
		0,407,408,5,114,0,0,408,409,5,111,0,0,409,410,5,112,0,0,410,411,5,101,
		0,0,411,412,5,114,0,0,412,413,5,116,0,0,413,414,5,121,0,0,414,58,1,0,0,
		0,415,416,5,114,0,0,416,417,5,101,0,0,417,418,5,112,0,0,418,419,5,101,
		0,0,419,420,5,97,0,0,420,421,5,116,0,0,421,60,1,0,0,0,422,423,5,114,0,
		0,423,424,5,101,0,0,424,425,5,116,0,0,425,426,5,117,0,0,426,427,5,114,
		0,0,427,428,5,110,0,0,428,62,1,0,0,0,429,430,5,115,0,0,430,431,5,101,0,
		0,431,432,5,108,0,0,432,433,5,102,0,0,433,64,1,0,0,0,434,435,5,115,0,0,
		435,436,5,116,0,0,436,437,5,101,0,0,437,438,5,112,0,0,438,66,1,0,0,0,439,
		440,5,115,0,0,440,441,5,119,0,0,441,442,5,105,0,0,442,443,5,116,0,0,443,
		444,5,99,0,0,444,445,5,104,0,0,445,68,1,0,0,0,446,447,5,116,0,0,447,448,
		5,101,0,0,448,449,5,115,0,0,449,450,5,116,0,0,450,70,1,0,0,0,451,452,5,
		116,0,0,452,453,5,104,0,0,453,454,5,101,0,0,454,455,5,110,0,0,455,72,1,
		0,0,0,456,457,5,116,0,0,457,458,5,111,0,0,458,74,1,0,0,0,459,460,5,116,
		0,0,460,461,5,114,0,0,461,462,5,121,0,0,462,76,1,0,0,0,463,464,5,117,0,
		0,464,465,5,110,0,0,465,466,5,116,0,0,466,467,5,105,0,0,467,468,5,108,
		0,0,468,78,1,0,0,0,469,470,5,118,0,0,470,471,5,97,0,0,471,472,5,114,0,
		0,472,80,1,0,0,0,473,474,5,119,0,0,474,475,5,104,0,0,475,476,5,105,0,0,
		476,477,5,108,0,0,477,478,5,101,0,0,478,82,1,0,0,0,479,480,5,119,0,0,480,
		481,5,105,0,0,481,482,5,116,0,0,482,483,5,104,0,0,483,84,1,0,0,0,484,485,
		5,116,0,0,485,486,5,114,0,0,486,487,5,117,0,0,487,494,5,101,0,0,488,489,
		5,102,0,0,489,490,5,97,0,0,490,491,5,108,0,0,491,492,5,115,0,0,492,494,
		5,101,0,0,493,484,1,0,0,0,493,488,1,0,0,0,494,86,1,0,0,0,495,496,5,73,
		0,0,496,497,5,110,0,0,497,518,5,116,0,0,498,499,5,70,0,0,499,500,5,108,
		0,0,500,501,5,111,0,0,501,502,5,97,0,0,502,518,5,116,0,0,503,504,5,67,
		0,0,504,505,5,104,0,0,505,506,5,97,0,0,506,518,5,114,0,0,507,508,5,83,
		0,0,508,509,5,116,0,0,509,510,5,114,0,0,510,511,5,105,0,0,511,512,5,110,
		0,0,512,518,5,103,0,0,513,514,5,66,0,0,514,515,5,111,0,0,515,516,5,111,
		0,0,516,518,5,108,0,0,517,495,1,0,0,0,517,498,1,0,0,0,517,503,1,0,0,0,
		517,507,1,0,0,0,517,513,1,0,0,0,518,88,1,0,0,0,519,520,5,65,0,0,520,521,
		5,114,0,0,521,522,5,114,0,0,522,523,5,97,0,0,523,524,5,121,0,0,524,90,
		1,0,0,0,525,526,5,76,0,0,526,527,5,105,0,0,527,528,5,115,0,0,528,529,5,
		116,0,0,529,92,1,0,0,0,530,531,5,68,0,0,531,532,5,105,0,0,532,533,5,99,
		0,0,533,534,5,116,0,0,534,535,5,105,0,0,535,536,5,111,0,0,536,537,5,110,
		0,0,537,538,5,97,0,0,538,539,5,114,0,0,539,540,5,121,0,0,540,94,1,0,0,
		0,541,542,5,73,0,0,542,543,5,116,0,0,543,544,5,101,0,0,544,545,5,114,0,
		0,545,96,1,0,0,0,546,547,5,61,0,0,547,98,1,0,0,0,548,549,5,45,0,0,549,
		550,5,62,0,0,550,100,1,0,0,0,551,552,5,123,0,0,552,102,1,0,0,0,553,554,
		5,125,0,0,554,104,1,0,0,0,555,556,5,91,0,0,556,106,1,0,0,0,557,558,5,93,
		0,0,558,108,1,0,0,0,559,560,5,40,0,0,560,110,1,0,0,0,561,562,5,41,0,0,
		562,112,1,0,0,0,563,564,5,46,0,0,564,565,5,46,0,0,565,114,1,0,0,0,566,
		567,5,46,0,0,567,116,1,0,0,0,568,569,5,44,0,0,569,118,1,0,0,0,570,571,
		5,58,0,0,571,120,1,0,0,0,572,573,5,43,0,0,573,122,1,0,0,0,574,575,5,45,
		0,0,575,124,1,0,0,0,576,577,5,42,0,0,577,126,1,0,0,0,578,579,5,47,0,0,
		579,128,1,0,0,0,580,581,5,94,0,0,581,130,1,0,0,0,582,583,5,109,0,0,583,
		584,5,111,0,0,584,585,5,100,0,0,585,132,1,0,0,0,586,587,5,100,0,0,587,
		588,5,105,0,0,588,589,5,118,0,0,589,134,1,0,0,0,590,591,5,60,0,0,591,136,
		1,0,0,0,592,593,5,62,0,0,593,138,1,0,0,0,594,595,5,97,0,0,595,596,5,110,
		0,0,596,597,5,100,0,0,597,140,1,0,0,0,598,599,5,110,0,0,599,600,5,111,
		0,0,600,601,5,116,0,0,601,142,1,0,0,0,602,603,5,111,0,0,603,604,5,114,
		0,0,604,144,1,0,0,0,605,606,5,120,0,0,606,607,5,111,0,0,607,608,5,114,
		0,0,608,146,1,0,0,0,609,610,5,105,0,0,610,611,5,115,0,0,611,148,1,0,0,
		0,612,613,5,60,0,0,613,627,5,62,0,0,614,615,5,105,0,0,615,616,5,115,0,
		0,616,620,1,0,0,0,617,619,3,183,91,0,618,617,1,0,0,0,619,622,1,0,0,0,620,
		618,1,0,0,0,620,621,1,0,0,0,621,623,1,0,0,0,622,620,1,0,0,0,623,624,5,
		110,0,0,624,625,5,111,0,0,625,627,5,116,0,0,626,612,1,0,0,0,626,614,1,
		0,0,0,627,150,1,0,0,0,628,629,5,60,0,0,629,630,5,61,0,0,630,152,1,0,0,
		0,631,632,5,62,0,0,632,633,5,61,0,0,633,154,1,0,0,0,634,635,3,191,95,0,
		635,156,1,0,0,0,636,637,3,189,94,0,637,158,1,0,0,0,638,642,7,1,0,0,639,
		641,7,1,0,0,640,639,1,0,0,0,641,644,1,0,0,0,642,640,1,0,0,0,642,643,1,
		0,0,0,643,160,1,0,0,0,644,642,1,0,0,0,645,646,3,159,79,0,646,647,3,115,
		57,0,647,649,3,159,79,0,648,650,3,173,86,0,649,648,1,0,0,0,649,650,1,0,
		0,0,650,162,1,0,0,0,651,654,5,39,0,0,652,655,8,2,0,0,653,655,3,175,87,
		0,654,652,1,0,0,0,654,653,1,0,0,0,655,656,1,0,0,0,656,657,5,39,0,0,657,
		164,1,0,0,0,658,663,5,34,0,0,659,662,8,3,0,0,660,662,3,175,87,0,661,659,
		1,0,0,0,661,660,1,0,0,0,662,665,1,0,0,0,663,661,1,0,0,0,663,664,1,0,0,
		0,664,666,1,0,0,0,665,663,1,0,0,0,666,667,5,34,0,0,667,166,1,0,0,0,668,
		670,3,183,91,0,669,668,1,0,0,0,670,671,1,0,0,0,671,669,1,0,0,0,671,672,
		1,0,0,0,672,673,1,0,0,0,673,674,6,83,0,0,674,168,1,0,0,0,675,676,8,4,0,
		0,676,170,1,0,0,0,677,678,7,4,0,0,678,172,1,0,0,0,679,682,7,5,0,0,680,
		683,3,121,60,0,681,683,3,123,61,0,682,680,1,0,0,0,682,681,1,0,0,0,682,
		683,1,0,0,0,683,684,1,0,0,0,684,685,3,159,79,0,685,174,1,0,0,0,686,690,
		3,177,88,0,687,690,3,179,89,0,688,690,3,203,101,0,689,686,1,0,0,0,689,
		687,1,0,0,0,689,688,1,0,0,0,690,176,1,0,0,0,691,692,5,92,0,0,692,714,5,
		39,0,0,693,694,5,92,0,0,694,714,5,34,0,0,695,696,5,92,0,0,696,714,5,92,
		0,0,697,698,5,92,0,0,698,714,5,48,0,0,699,700,5,92,0,0,700,714,5,97,0,
		0,701,702,5,92,0,0,702,714,5,98,0,0,703,704,5,92,0,0,704,714,5,102,0,0,
		705,706,5,92,0,0,706,714,5,110,0,0,707,708,5,92,0,0,708,714,5,114,0,0,
		709,710,5,92,0,0,710,714,5,116,0,0,711,712,5,92,0,0,712,714,5,118,0,0,
		713,691,1,0,0,0,713,693,1,0,0,0,713,695,1,0,0,0,713,697,1,0,0,0,713,699,
		1,0,0,0,713,701,1,0,0,0,713,703,1,0,0,0,713,705,1,0,0,0,713,707,1,0,0,
		0,713,709,1,0,0,0,713,711,1,0,0,0,714,178,1,0,0,0,715,716,5,92,0,0,716,
		717,5,120,0,0,717,718,1,0,0,0,718,741,3,205,102,0,719,720,5,92,0,0,720,
		721,5,120,0,0,721,722,1,0,0,0,722,723,3,205,102,0,723,724,3,205,102,0,
		724,741,1,0,0,0,725,726,5,92,0,0,726,727,5,120,0,0,727,728,1,0,0,0,728,
		729,3,205,102,0,729,730,3,205,102,0,730,731,3,205,102,0,731,741,1,0,0,
		0,732,733,5,92,0,0,733,734,5,120,0,0,734,735,1,0,0,0,735,736,3,205,102,
		0,736,737,3,205,102,0,737,738,3,205,102,0,738,739,3,205,102,0,739,741,
		1,0,0,0,740,715,1,0,0,0,740,719,1,0,0,0,740,725,1,0,0,0,740,732,1,0,0,
		0,741,180,1,0,0,0,742,743,5,13,0,0,743,746,5,10,0,0,744,746,7,4,0,0,745,
		742,1,0,0,0,745,744,1,0,0,0,746,182,1,0,0,0,747,750,3,185,92,0,748,750,
		7,6,0,0,749,747,1,0,0,0,749,748,1,0,0,0,750,184,1,0,0,0,751,752,7,7,0,
		0,752,186,1,0,0,0,753,756,3,209,104,0,754,756,3,207,103,0,755,753,1,0,
		0,0,755,754,1,0,0,0,756,760,1,0,0,0,757,759,3,193,96,0,758,757,1,0,0,0,
		759,762,1,0,0,0,760,758,1,0,0,0,760,761,1,0,0,0,761,188,1,0,0,0,762,760,
		1,0,0,0,763,767,3,209,104,0,764,766,3,193,96,0,765,764,1,0,0,0,766,769,
		1,0,0,0,767,765,1,0,0,0,767,768,1,0,0,0,768,190,1,0,0,0,769,767,1,0,0,
		0,770,774,3,207,103,0,771,773,3,193,96,0,772,771,1,0,0,0,773,776,1,0,0,
		0,774,772,1,0,0,0,774,775,1,0,0,0,775,192,1,0,0,0,776,774,1,0,0,0,777,
		782,3,207,103,0,778,782,3,209,104,0,779,782,3,197,98,0,780,782,5,95,0,
		0,781,777,1,0,0,0,781,778,1,0,0,0,781,779,1,0,0,0,781,780,1,0,0,0,782,
		194,1,0,0,0,783,787,3,207,103,0,784,787,3,209,104,0,785,787,3,203,101,
		0,786,783,1,0,0,0,786,784,1,0,0,0,786,785,1,0,0,0,787,196,1,0,0,0,788,
		791,3,211,105,0,789,791,3,203,101,0,790,788,1,0,0,0,790,789,1,0,0,0,791,
		198,1,0,0,0,792,793,3,203,101,0,793,200,1,0,0,0,794,795,3,203,101,0,795,
		202,1,0,0,0,796,797,5,92,0,0,797,798,5,117,0,0,798,799,1,0,0,0,799,800,
		3,205,102,0,800,801,3,205,102,0,801,802,3,205,102,0,802,803,3,205,102,
		0,803,817,1,0,0,0,804,805,5,92,0,0,805,806,5,85,0,0,806,807,1,0,0,0,807,
		808,3,205,102,0,808,809,3,205,102,0,809,810,3,205,102,0,810,811,3,205,
		102,0,811,812,3,205,102,0,812,813,3,205,102,0,813,814,3,205,102,0,814,
		815,3,205,102,0,815,817,1,0,0,0,816,796,1,0,0,0,816,804,1,0,0,0,817,204,
		1,0,0,0,818,820,7,8,0,0,819,818,1,0,0,0,820,206,1,0,0,0,821,822,2,65,90,
		0,822,208,1,0,0,0,823,824,2,97,122,0,824,210,1,0,0,0,825,826,2,48,57,0,
		826,212,1,0,0,0,827,829,5,13,0,0,828,827,1,0,0,0,828,829,1,0,0,0,829,830,
		1,0,0,0,830,833,5,10,0,0,831,833,5,13,0,0,832,828,1,0,0,0,832,831,1,0,
		0,0,833,214,1,0,0,0,834,836,7,9,0,0,835,834,1,0,0,0,836,837,1,0,0,0,837,
		835,1,0,0,0,837,838,1,0,0,0,838,839,1,0,0,0,839,840,6,107,0,0,840,216,
		1,0,0,0,32,0,220,223,229,493,517,620,626,642,649,654,661,663,671,682,689,
		713,740,745,749,755,760,767,774,781,786,790,816,819,828,832,837,1,6,0,
		0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
