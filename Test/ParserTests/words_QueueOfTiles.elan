
class QueueOfTiles
    private property contents Array<String>
    private property rear Int
    private property maxSize Int
    constant letters = " * ***ABCDEFGHIJKLMNOPQRSTUVWXYZ"

    constructor(maxSize Int)
        self.maxSize = maxSize
        contents = new Array<String>(maxSize)
        rear = -1 # signifies 'empty'
    end constructor

    procedure initialise()
        var rnd = random()
        rear = -1
        for count = 0 to maxSize - 2
           add(rnd)
        end for
    end procedure

    function isNotEmpty() as Boolean -> rear > -1

    procedure withdrawNextLetter(letter String)
        if isNotEmpty() then
            letter = contents[0]
            for count = 1 to rear
                contents[count - 1] = contents[count]
                contents[rear] = ""
            end for
            rear -= 1
        end if
    end procedure

    procedure add(rnd Random)
        if rear < maxSize - 1 then
            rear += 1
            var n = rnd.next(0, 30)
            contents[rear] = letters[n].asString()
        end if
    end procedure

    function show() as String
       if rear >= 0 then
         result = contents.reduce(start, lambda s, x -> s + x) + newline()
       end if
       return result
    end function
end class