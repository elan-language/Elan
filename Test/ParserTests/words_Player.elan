
class Player

    property name as String
    property score as Int
    property tilesPlayed as Int
    property tilesInHand as String

    constructor(name String)
        self.name = name
        score = 50
    end constructor

    procedure setTilesInHand(tiles String)
        tilesInHand = tiles
    end procedure

    procedure addToLetters(letter Char)
        tilesInHand = tilesInHand + letter
    end procedure

    procedure addToScore(points Int)
        score = score + points
    end procedure

    procedure removeLetter(letter Char)
        tilesInHand = tilesInHand.remove(tilesInHand.indexOf(letter), 1)
    end procedure

    function wordAsWouldBePlayed(word String) as String
        var wordAsPlayed = ""
        tilesPlayed = tilesPlayed + word.length()
        for letter in word
            var c = if tilesInHand.contains(letter) then letter else '*'
            wordAsPlayed = wordsAsPlayed + c
        end for
        return wordAsPlayed
    end function

    procedure removeLetters(wordAsPlayed String)
        for letter in wordAsPlayed
            tilesInHand.removeLetter(letter)
        end for
    end procedure

    procedure deductAnyPenalty()
        tilesInHand = tilesInHand - playerTiles.reduce(0, lambda penalty,tile -> penalty - tileDictionary[tile])
    end procedure

end class