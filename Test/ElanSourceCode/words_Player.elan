﻿main
    var p = Player("Richard")
    printLine(p.name)
end main

constant tileDictionary = {'A': 1,'B': 2,'C': 2,'D': 2,'E': 1,'F': 3,'G': 2,'H': 3,'I': 1,'J': 5,'K': 3,'L': 2,'M': 2,'N': 1,'O': 1,'P': 2,'Q': 5,'R': 1,'S': 1,'T': 1,'U': 2,'V': 3,'W': 3,'X': 5,'Y': 3,'Z': 5}

class Player
    constructor(name String)
        self.name = name
        score = 50
    end constructor

    property name String
    property score Int
    property tilesPlayed Int
    property tilesInHand String

    procedure setTilesInHand(tiles String)
        tilesInHand = tiles
    end procedure

    procedure addToLetters(letter Char)
        tilesInHand = tilesInHand + letter
    end procedure

    procedure addToScore(points Int)
        score = score + points
    end procedure

    procedure removeLetter(letter Char)
        var i = tilesInHand.indexOf(letter)
        tilesInHand = tilesInHand[..i-1] + tilesInHand[i+1..]
    end procedure

    procedure wordAsWouldBePlayed(word String, asPlayed String)
        asPlayed = ""
        tilesPlayed = tilesPlayed + word.length()
        foreach letter in word
             var c = letter
             if not tilesInHand.contains(letter) then 
               c = '*'
             end if
             asPlayed = asPlayed + c
        end foreach
    end procedure

    procedure removeLetters(wordAsPlayed String)
        foreach letter in wordAsPlayed
             var x = letter
             removeLetter(x)
        end foreach
    end procedure

    procedure deductAnyPenalty()
      foreach tile in tilesInHand
        score = score - tileDictionary[tile]
      end foreach
    end procedure

    function asString() -> String 
        return name
    end function
end class