class Player
    constructor(name String)
        self.name = name
        score = 50
    end constructor

    property name String
    property score Int
    property tilesPlayed Int
    property tilesInHand String

    procedure setTilesInHand(tiles String)
        tilesInHand = tiles
    end procedure

    procedure addToLetters(letter Char)
        tilesInHand = tilesInHand + letter
    end procedure

    procedure addToScore(points Int)
        score = score + points
    end procedure

    procedure removeLetter(letter Char)
        var i = tilesInHand.indexOf(letter)
        tilesInHand = tilesInHand[..i] + tilesInHand[i+1..]
    end procedure

    procedure wordAsWouldBePlayed(word String, asPlayed String)
        asPlayed = ""
        tilesPlayed = tilesPlayed + word.length()
        foreach letter in word
             var c = letter
             if not tilesInHand.contains(letter) then 
               c = '*'
             end if
             asPlayed = asPlayed + c
        end foreach
    end procedure

    procedure removeLetters(wordAsPlayed String)
        foreach letter in wordAsPlayed
             var x = letter
             removeLetter(x)
        end foreach
    end procedure

    procedure deductAnyPenalty()
      foreach tile in tilesInHand
        score = score - tileDictionary[tile]
      end foreach
    end procedure

    function asString() -> String 
        return name
    end function
end class